{"version":3,"sources":["serviceWorker.js","services/CourseService.js","components/CourseManager/CourseTableEntryComponent.js","components/CourseManager/CourseTableComponent.js","components/CourseManager/CourseGridEntryComponent.js","components/CourseManager/CourseGridComponent.js","containers/CourseManagerContainer.js","components/CourseEditor/TopicComponent.js","services/ModuleService.js","services/LessonService.js","services/TopicService.js","services/WidgetService.js","actions/widgetActions.js","components/CourseEditor/ModuleList.js","actions/moduleActions.js","components/CourseEditor/LessonList.js","actions/lessonActions.js","components/CourseEditor/TopicList.js","actions/topicActions.js","components/CourseEditor/WidgetList.js","components/CourseEditor/CourseEditorComponent.js","Home.js","reducers/courseReducer.js","reducers/moduleReducer.js","reducers/lessonReducer.js","reducers/topicReducer.js","reducers/widgetReducer.js","index.js"],"names":["Boolean","window","location","hostname","match","url","findCourseById","id","fetch","then","response","json","updateCourse","courseId","newCourse","method","body","JSON","stringify","headers","course","CourseTableEntryComponent","props","state","editing","courseTitle","updateTitle","event","newTitle","target","value","title","setState","_id","this","onChange","className","to","owner","lastUpdated","onClick","deleteCourse","React","Component","CourseTableComponent","courses","map","key","CourseGridEntryComponent","CourseGridComponent","changePage","CourseManagerContainer","table","createCourse","$title","$","val","courseService","actualCourse","prevState","catch","error","filter","c","placeholder","type","module","moduleId","lesson","lessonId","topic","topicId","widget","widgetId","tid","order","findWidgetsForTopic","dispatch","widgetService","actualWidgets","widgets","updateWidget","status","connect","modules","moduleReducer","selectedModule","courseReducer","deleteModule","moduleService","createModule","actualModule","updateModule","lessons","lessonReducer","selectedLesson","deleteLesson","lessonService","createLesson","actualLesson","updateLesson","topics","topicReducer","selectedTopic","deleteTopic","topicService","createTopic","actualTopic","updateTopic","widgetReducer","preview","deleteWidget","createWidget","actualWidget","togglePreview","saveAll","reorderWidget","otherWidget","htmlFor","checked","widgetOrder","length","text","size","style","name","split","str","src","alt","CourseEditorComponent","params","findModulesForCourse","selectModule","findLessonsForModule","findTopicsForLesson","selectLesson","selectTopic","prevProps","snapshot","cb","actualModules","actualLessons","actualTopics","Home","initialState","action","sort","w1","w2","rootReducer","combineReducers","store","createStore","ReactDOM","render","path","component","exact","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"mSAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,gEClBAC,EAAM,kEAgBCC,EAAiB,SAACC,GAAD,OAC5BC,MAAM,GAAD,OAAIH,EAAJ,YAAWE,IACbE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WAElBC,EAAe,SAACC,EAAUC,GAAX,OAC1BN,MAAM,GAAD,OAAIH,EAAJ,YAAWQ,GAAY,CAC1BE,OAAQ,MACRC,KAAMC,KAAKC,UAAUJ,GACrBK,QAAS,CACP,eAAgB,sBAGjBV,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WAQhB,EAlCa,SAACS,GAAD,OAC1BZ,MAAMH,EAAK,CACTU,OAAQ,OACRC,KAAMC,KAAKC,UAAUE,GACrBD,QAAS,CACP,eAAgB,sBAGjBV,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WA0BhB,EAxBe,kBAC5BH,MAAMH,GACHI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WAsBhB,EANa,SAACE,GAAD,OAC1BL,MAAM,GAAD,OAAIH,EAAJ,YAAWQ,GAAY,CAC1BE,OAAQ,WAEPN,MAAK,SAAAC,GAAQ,OAAIA,EAASC,W,OCuChBU,E,kDA9Db,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAPRC,MAAQ,CACNC,SAAS,EACTC,YAAa,cACbL,OAAQ,EAAKE,MAAMF,QAGF,EAInBM,YAAc,SAACC,GACb,IAAMC,EAAWD,EAAME,OAAOC,MACxBV,EAAM,eAAQ,EAAKG,MAAMH,QAC/BA,EAAOW,MAAQH,EACf,EAAKI,SAAS,CACZZ,OAAQA,KATO,EAanBR,aAAe,WACb,EAAKoB,SAAS,CAACR,SAAS,IACxBZ,EAAa,EAAKW,MAAMH,OAAOa,IAAK,EAAKV,MAAMH,SAf9B,E,qDAkBT,IAAD,OACP,OACE,4BACE,6BAE2B,IAAvBc,KAAKX,MAAMC,SACX,2BACEW,SAAUD,KAAKR,YACfI,MAAOI,KAAKX,MAAMH,OAAOW,SAGJ,IAAvBG,KAAKX,MAAMC,SACX,8BACE,uBAAGY,UAAU,2CADf,OAGE,kBAAC,IAAD,CAAMC,GAAE,kBAAaH,KAAKX,MAAMH,OAAOa,MAAQC,KAAKX,MAAMH,OAAOW,SAIvE,wBAAIK,UAAW,uBAAwBF,KAAKZ,MAAMF,OAAOkB,OACzD,wBAAIF,UAAW,+BAAgCF,KAAKZ,MAAMF,OAAOmB,aACjE,wBAAIH,UAAW,YAEXF,KAAKX,MAAMC,SACX,uBACIY,UAAW,kCACXI,QAASN,KAAKtB,gBAGjBsB,KAAKX,MAAMC,SACZ,uBACIY,UAAW,mCACXI,QAAS,kBAAM,EAAKR,SAAS,CAACR,SAAS,OAX/C,OAcE,uBACIY,UAAW,8DACXI,QAAS,kBAAM,EAAKlB,MAAMmB,aAAa,EAAKnB,MAAMF,iB,GA9DxBsB,IAAMC,WCkC/BC,G,8DAjCX,WAAYtB,GAAQ,uCACVA,G,qDAGA,IAAD,OACL,OACI,2BAAOc,UAAU,SACb,+BACA,4BACI,wBAAIA,UAAU,0BAAd,SACA,wBAAIA,UAAU,0BAAd,SACA,wBAAIA,UAAU,kCAAd,iBACA,wBAAIA,UAAU,0BACV,kBAAC,IAAD,CAAMA,UAAU,8CACVC,GAAI,qBAIlB,+BAEIH,KAAKZ,MAAMuB,QAAQC,KAAI,SAAA1B,GAAM,OACzB,kBAAC,EAAD,CACI2B,IAAK3B,EAAOa,IACZQ,aAAc,EAAKnB,MAAMmB,aACzBrB,OAAQA,a,GAzBDsB,IAAMC,YC2E1BK,E,kDApEX,WAAY1B,GAAQ,IAAD,8BACf,cAAMA,IAPVC,MAAQ,CACJC,SAAS,EACTC,YAAa,cACbL,OAAQ,EAAKE,MAAMF,QAGJ,EAInBM,YAAc,SAACC,GACX,IAAMC,EAAWD,EAAME,OAAOC,MACxBV,EAAM,eAAQ,EAAKG,MAAMH,QAC/BA,EAAOW,MAAQH,EACf,EAAKI,SAAS,CACVZ,OAAQA,KATG,EAanBR,aAAe,WACX,EAAKoB,SAAS,CAACR,SAAS,IACxBZ,EAAa,EAAKW,MAAMH,OAAOa,IAAK,EAAKV,MAAMH,SAfhC,E,qDAkBT,IAAD,OACL,OACI,yBAAKgB,UAAW,iDACR,yBAAKA,UAAU,mBAEgB,IAAvBF,KAAKX,MAAMC,SACX,2BACIW,SAAUD,KAAKR,YACfI,MAAOI,KAAKX,MAAMH,OAAOW,SAGN,IAAvBG,KAAKX,MAAMC,SACX,yBAAKY,UAAU,kBACX,yBAAKA,UAAW,SACZ,uBAAGA,UAAU,mDAEjB,kBAAC,IAAD,CAAMA,UAAW,oCACXC,GAAE,kBAAaH,KAAKX,MAAMH,OAAOa,MAAQC,KAAKX,MAAMH,OAAOW,QAGzE,yBAAKK,UAAW,0BACZ,yBAAKA,UAAW,SACXF,KAAKZ,MAAMF,OAAOmB,aAEvB,yBAAKH,UAAW,SAERF,KAAKX,MAAMC,SACX,uBACIY,UAAW,kCACXI,QAASN,KAAKtB,gBAGjBsB,KAAKX,MAAMC,SACZ,uBACIY,UAAW,mCACXI,QAAS,kBAAM,EAAKR,SAAS,CAACR,SAAS,OAXnD,OAcI,uBACIY,UAAW,8DACXI,QAAS,kBAAM,EAAKlB,MAAMmB,aAAa,EAAKnB,MAAMF,aAGlE,oC,GApEmBsB,IAAMC,WCoC9BM,E,kDAnCX,WAAY3B,GAAQ,uCACVA,G,qDAGA,IAAD,OACL,OACI,yBAAKc,UAAU,aACX,yBAAKA,UAAW,OACZ,yBAAKA,UAAW,qBAAhB,oBAGA,yBAAKA,UAAW,qBAAhB,eAGA,yBAAKA,UAAW,qBACZ,kBAAC,IAAD,CAAMA,UAAU,0CACVC,GAAI,qBAGlB,yBAAKD,UAAW,OAEZF,KAAKZ,MAAMuB,QAAQC,KAAI,SAAA1B,GAAM,OACzB,kBAAC,EAAD,CACI2B,IAAK3B,EAAOa,IACZQ,aAAc,EAAKnB,MAAMmB,aACzBrB,OAAQA,EACR8B,WAAY,EAAK5B,MAAM4B,sB,GA3BjBR,IAAMC,WC4GzBQ,E,4MAtGX5B,MAAQ,CACJsB,QAAS,GACTO,MAAO,EAAK9B,MAAM8B,O,EAUtBC,aAAe,WACX,IAAMC,EAASC,IAAE,mBACXxB,EAAQuB,EAAOE,MACrBF,EAAOE,IAAI,IAkBXC,EAjBkB,CACd1B,MAAOA,EACPO,MAAO,KACPC,YAAa,cAeZ9B,MAAK,SAAAiD,GAAY,OAAI,EAAK1B,UAAS,SAAA2B,GAC5B,MAAO,CACHd,QAAQ,GAAD,mBACAc,EAAUd,SADV,CACmBa,WAKrCE,OAAM,SAAAC,Q,EAGfpB,aAAe,SAACrB,GACZqC,EAA2BrC,EAAOa,KAC7BxB,MAAK,kBAAM,EAAKuB,UAAS,SAAA2B,GAAS,MAAK,CACpCd,QAASc,EAAUd,QAAQiB,QAAO,SAAAC,GAAC,OAAIA,EAAE9B,MAAQb,EAAOa,e,kEA3C/C,IAAD,OAChBwB,IACKhD,MAAK,SAAAoC,GAAO,OAAI,EAAKb,SAAS,CAC3Ba,QAASA,S,+BA4CX,IAAD,OACL,OACI,yBAAKT,UAAU,aACX,wBAAIA,UAAU,sBACV,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,SACX,uBAAGA,UAAU,0CAEjB,yBAAKA,UAAU,SACX,yBAAKA,UAAU,sDAAf,mBAIJ,yBAAKA,UAAU,SACX,2BAAO7B,GAAG,iBACFyD,YAAY,mBACbC,KAAK,OACL7B,UAAU,iEAErB,yBAAKA,UAAU,SACX,uBAAGA,UAAU,qEACTI,QAAS,kBAAM,EAAKa,mBAI5B,uBAAGjB,UAAU,kGAKzB,yBAAKA,UAAU,uBAEPF,KAAKX,MAAM6B,OACX,kBAAC,EAAD,CACIP,QAASX,KAAKX,MAAMsB,QACpBJ,aAAcP,KAAKO,gBAGtBP,KAAKX,MAAM6B,OACZ,kBAAC,EAAD,CACIP,QAASX,KAAKX,MAAMsB,QACpBJ,aAAcP,KAAKO,qB,GA/FVC,IAAMC,W,GCPdD,IAAMC,U,OCF7BtC,EAAM,0DAgCG,EA9Ba,SAACQ,EAAUqD,GAAX,OACxB1D,MAAM,GAAD,OAAIH,EAAJ,oBAAmBQ,EAAnB,YAAuC,CACxCE,OAAQ,OACRC,KAAMC,KAAKC,UAAUgD,GACrB/C,QAAS,CACL,eAAgB,sBAGnBV,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WAsBpB,EApBwB,SAACE,GAAD,OACnCL,MAAM,GAAD,OAAIH,EAAJ,oBAAmBQ,EAAnB,aACAJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WAkBpB,EAhBa,SAACwD,EAAUD,GAAX,OACxB1D,MAAM,GAAD,OAAIH,EAAJ,oBAAmB8D,GAAY,CAChCpD,OAAQ,MACRC,KAAMC,KAAKC,UAAUgD,GACrB/C,QAAS,CACL,eAAgB,sBAGnBV,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WAQpB,EANa,SAACwD,GAAD,OACxB3D,MAAM,GAAD,OAAIH,EAAJ,oBAAmB8D,GAAY,CAChCpD,OAAQ,WAEPN,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WC9B7BN,EAAM,0DAgCG,EA9Ba,SAAC8D,EAAUC,GAAX,OACxB5D,MAAM,GAAD,OAAIH,EAAJ,oBAAmB8D,EAAnB,YAAuC,CACxCpD,OAAQ,OACRC,KAAMC,KAAKC,UAAUkD,GACrBjD,QAAS,CACL,eAAgB,sBAGnBV,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WAsBpB,EApBwB,SAACwD,GAAD,OACnC3D,MAAM,GAAD,OAAIH,EAAJ,oBAAmB8D,EAAnB,aACA1D,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WAkBpB,EAhBa,SAAC0D,EAAUD,GAAX,OACxB5D,MAAM,GAAD,OAAIH,EAAJ,oBAAmBgE,GAAY,CAChCtD,OAAQ,MACRC,KAAMC,KAAKC,UAAUkD,GACrBjD,QAAS,CACL,eAAgB,sBAGnBV,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WAQpB,EANa,SAAC0D,GAAD,OACxB7D,MAAM,GAAD,OAAIH,EAAJ,oBAAmBgE,GAAY,CAChCtD,OAAQ,WAEPN,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WC9B7BN,EAAM,0DAgCG,EA9BY,SAACgE,EAAUC,GAAX,OACvB9D,MAAM,GAAD,OAAIH,EAAJ,oBAAmBgE,EAAnB,WAAsC,CACvCtD,OAAQ,OACRC,KAAMC,KAAKC,UAAUoD,GACrBnD,QAAS,CACL,eAAgB,sBAGnBV,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WAsBpB,EApBuB,SAAC0D,GAAD,OAClC7D,MAAM,GAAD,OAAIH,EAAJ,oBAAmBgE,EAAnB,YACA5D,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WAkBpB,EAhBY,SAAC4D,EAASD,GAAV,OACvB9D,MAAM,GAAD,OAAIH,EAAJ,mBAAkBkE,GAAW,CAC9BxD,OAAQ,MACRC,KAAMC,KAAKC,UAAUoD,GACrBnD,QAAS,CACL,eAAgB,sBAGnBV,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WAQpB,EANY,SAAC4D,GAAD,OACvB/D,MAAM,GAAD,OAAIH,EAAJ,mBAAkBkE,GAAW,CAC9BxD,OAAQ,WAEPN,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WC9B7BN,EAAM,4BA0CG,EAxCa,SAACkE,EAASC,GAAV,OACxBhE,MAAM,GAAD,OAAIH,EAAJ,YAAmB,CACpBU,OAAQ,OACRC,KAAMC,KAAKC,UAAL,2BAAmBsD,GAAnB,IAA2BD,aACjCpD,QAAS,CACL,eAAgB,sBAGnBV,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WAgCpB,EA9BuB,SAAC4D,GAAD,OAClC/D,MAAM,GAAD,OAAIH,EAAJ,mBAAkBkE,EAAlB,aACA9D,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WA4BpB,EA1Ba,SAAC8D,EAAUD,GAAX,OACxBhE,MAAM,GAAD,OAAIH,EAAJ,oBAAmBoE,GAAY,CAChC1D,OAAQ,MACRC,KAAMC,KAAKC,UAAUsD,GACrBrD,QAAS,CACL,eAAgB,sBAGnBV,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WAkBpB,EAhBa,SAAC8D,GAAD,OACxBjE,MAAM,GAAD,OAAIH,EAAJ,oBAAmBoE,GAAY,CAChC1D,OAAQ,WAEPN,MAAK,SAAAC,GAAQ,OAAIA,MAYX,EAVc,SAACgE,EAAKC,EAAOH,GAAb,OACzBhE,MAAM,GAAD,OAAIH,EAAJ,mBAAkBqE,EAAlB,YAAyBC,GAAS,CACnC5D,OAAQ,MACRC,KAAMC,KAAKC,UAAUsD,GACrBrD,QAAS,CACL,eAAgB,sBAGnBV,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WCzBtBiE,EAAsB,SAACC,EAAUN,GAAX,OAC/BO,EAAqCP,GAChC9D,MAAK,SAAAsE,GAAa,OAAIF,EAAS,CACxBZ,KAhBsB,yBAiBtBe,QAASD,QAIZE,EAAe,SAACJ,EAAUL,GAAX,OACxBM,EAA2BN,EAAOjE,GAAIiE,GACjC/D,MAAK,SAAAyE,GAAM,OAAIL,EAAS,CACjBZ,KAvBa,gBAwBbO,eCiDDW,eAZe,SAAC5D,GAAD,MAAY,CACtC6D,QAAS7D,EAAM8D,cAAcD,QAC7BE,eAAgB/D,EAAM8D,cAAclB,SACpC/C,OAAQG,EAAMgE,cAAcnE,WAGC,SAACyD,GAAD,MAAe,CAC5CW,aAAc,SAACtB,GAAD,OCzCU,SAACW,EAAUX,GAAX,OACxBuB,EAA2BvB,EAAOjC,KAC7BxB,MAAK,SAAAyE,GAAM,OAAML,EAAS,CACnBZ,KA7Ba,gBA8BbC,cDqCcsB,CAAaX,EAAUX,IACjDwB,aAAc,SAACtE,EAAQ8C,GAAT,OCjEU,SAACW,EAAUzD,EAAQ8C,GAAnB,OACxBuB,EAA2BrE,EAAOa,IAAKiC,GAClCzD,MAAK,SAAAkF,GAAY,OAAId,EAAS,CAC3BZ,KATiB,gBAUjBC,OAAQyB,OD6DkBD,CAAab,EAAUzD,EAAQ8C,IACjE0B,aAAc,SAAC1B,GAAD,OCnDU,SAACW,EAAUX,GAAX,OACxBuB,EAA2BvB,EAAOjC,IAAKiC,GAClCzD,MAAK,SAAAyE,GAAM,OAAIL,EAAS,CACjBZ,KAtBa,gBAuBbC,cD+Cc0B,CAAaf,EAAUX,OAGtCiB,EAnEI,SAAC,GAAD,IACb/D,EADa,EACbA,OADa,IAEXgE,eAFW,MAEH,GAFG,EAGXE,EAHW,EAGXA,eACAE,EAJW,EAIXA,aACAE,EALW,EAKXA,aACAE,EANW,EAMXA,aANW,OAOf,6BACI,wBAAIxD,UAAU,+BAENgD,EAAQtC,KAAI,SAAAoB,GAAM,OACd,0BAAMnB,IAAKmB,EAAOjC,KAEViC,EAAO1C,SACP,wBAAIY,UAAU,iDACV,2BACID,SAAU,SAACR,GAAD,OACNiE,EAAa,2BAAI1B,GAAL,IAAanC,MAAOJ,EAAME,OAAOC,UAEjDA,MAAOoC,EAAOnC,QAElB,uBAAGK,UAAW,kCACVI,QAAS,kBAAMoD,EAAa,2BAAI1B,GAAL,IAAa1C,SAAS,QACrD,uBAAGY,UAAU,sDACTI,QAAS,kBAAMgD,EAAatB,QAInCA,EAAO1C,SACR0C,EAAOjC,MAAQqD,GACf,wBAAIlD,UAAU,iDACT8B,EAAOnC,QAIXmC,EAAO1C,SACR0C,EAAOjC,MAAQqD,GACf,wBAAIlD,UAAU,0CACV,kBAAC,IAAD,CAAMC,GAAE,kBAAajB,EAAOa,IAApB,oBAAmCiC,EAAOjC,MAC7CiC,EAAOnC,OAEZ,uBAAGK,UAAW,+CACXI,QAAS,kBAAMoD,EAAa,2BAAI1B,GAAL,IAAa1C,SAAS,cAM5E,4BAAQgB,QAAS,kBAAMkD,EAAatE,EAAQ,CAACW,MAAO,iBAApD,qBEqBOoD,eAbe,SAAC5D,GAAD,MAAY,CACtCsE,QAAStE,EAAMuE,cAAcD,QAC7BE,eAAgBxE,EAAMuE,cAAczB,SACpCjD,OAAQG,EAAMgE,cAAcnE,OAC5B8C,OAAQ3C,EAAM8D,cAAclB,aAGC,SAACU,GAAD,MAAe,CAC5CmB,aAAc,SAAC5B,GAAD,OC3CU,SAACS,EAAUT,GAAX,OACxB6B,EAA2B7B,EAAOnC,KAC7BxB,MAAK,SAAAyE,GAAM,OAAML,EAAS,CACnBZ,KA7Ba,gBA8BbG,cDuCc4B,CAAanB,EAAUT,IACjD8B,aAAc,SAAChC,EAAQE,GAAT,OCnEU,SAACS,EAAUV,EAAUC,GAArB,OACxB6B,EAA2B9B,EAAUC,GAChC3D,MAAK,SAAA0F,GAAY,OAAItB,EAAS,CAC3BZ,KATiB,gBAUjBG,OAAQ+B,OD+DkBD,CAAarB,EAAUX,EAAQE,IACjEgC,aAAc,SAAChC,GAAD,OCrDU,SAACS,EAAUT,GAAX,OACxB6B,EAA2B7B,EAAOnC,IAAKmC,GAClC3D,MAAK,SAAAyE,GAAM,OAAIL,EAAS,CACjBZ,KAtBa,gBAuBbG,cDiDcgC,CAAavB,EAAUT,OAGtCe,EArEI,SAAC,GAAD,IACb/D,EADa,EACbA,OACE8C,EAFW,EAEXA,OAFW,IAGX2B,eAHW,MAGH,GAHG,EAIXE,EAJW,EAIXA,eACAC,EALW,EAKXA,aACAE,EANW,EAMXA,aACAE,EAPW,EAOXA,aAPW,OAQf,6BACI,wBAAIhE,UAAU,iCAENyD,EAAQ/C,KAAI,SAAAsB,GAAM,OACd,0BAAMrB,IAAKqB,EAAOnC,KAEVmC,EAAO5C,SACP,wBAAIY,UAAU,0CACV,2BACID,SAAU,SAACR,GAAD,OACNyE,EAAa,2BAAIhC,GAAL,IAAarC,MAAOJ,EAAME,OAAOC,UAEjDA,MAAOsC,EAAOrC,QAElB,uBAAGK,UAAW,kCACXI,QAAS,kBAAM4D,EAAa,2BAAIhC,GAAL,IAAa5C,SAAS,QACpD,uBAAGY,UAAU,sDACVI,QAAS,kBAAMwD,EAAa5B,QAIlCA,EAAO5C,SACR4C,EAAOnC,MAAQ8D,GACf,wBAAI3D,UAAU,0CACTgC,EAAOrC,QAIXqC,EAAO5C,SACR4C,EAAOnC,MAAQ8D,GACf,wBAAI3D,UAAU,mCACV,kBAAC,IAAD,CAAMC,GAAE,kBAAajB,EAAOa,IAApB,oBAAmCiC,EAAnC,oBAAqDE,EAAOnC,MAC/DmC,EAAOrC,OAEZ,uBAAGK,UAAW,+CACXI,QAAS,kBAAM4D,EAAa,2BAAIhC,GAAL,IAAa5C,SAAS,cAM5E,4BAAQgB,QAAS,kBAAM0D,EAAahC,EAAQ,CAACnC,MAAO,iBAApD,qBEsBOoD,eAde,SAAC5D,GAAD,MAAY,CACtC8E,OAAQ9E,EAAM+E,aAAaD,OAC3BE,cAAehF,EAAM+E,aAAa/B,QAClCnD,OAAQG,EAAMgE,cAAcnE,OAC5B8C,OAAQ3C,EAAM8D,cAAclB,SAC5BC,OAAQ7C,EAAMuE,cAAczB,aAGC,SAACQ,GAAD,MAAe,CAC5C2B,YAAa,SAAClC,GAAD,OC7CU,SAACO,EAAUP,GAAX,OACvBmC,EAAyBnC,EAAMrC,KAC1BxB,MAAK,SAAAyE,GAAM,OAAML,EAAS,CACnBZ,KA7BY,eA8BZK,aDyCYkC,CAAY3B,EAAUP,IAC9CoC,YAAa,SAACxC,EAAQI,GAAT,OCrEU,SAACO,EAAUR,EAAUC,GAArB,OACvBmC,EAAyBpC,EAAUC,GAC9B7D,MAAK,SAAAkG,GAAW,OAAI9B,EAAS,CAC1BZ,KATgB,eAUhBK,MAAOqC,ODiEiBD,CAAY7B,EAAUX,EAAQI,IAC9DsC,YAAa,SAACtC,GAAD,OCvDU,SAACO,EAAUP,GAAX,OACvBmC,EAAyBnC,EAAMrC,IAAKqC,GAC/B7D,MAAK,SAAAyE,GAAM,OAAIL,EAAS,CACjBZ,KAtBY,eAuBZK,aDmDYsC,CAAY/B,EAAUP,OAGnCa,EAvEG,SAAC,GAAD,IACZ/D,EADY,EACZA,OACE8C,EAFU,EAEVA,OACAE,EAHU,EAGVA,OAHU,IAIViC,cAJU,MAIH,GAJG,EAKVE,EALU,EAKVA,cACAC,EANU,EAMVA,YACAE,EAPU,EAOVA,YACAE,EARU,EAQVA,YARU,OASd,6BACI,wBAAIxE,UAAU,gCAENiE,EAAOvD,KAAI,SAAAwB,GAAK,OACZ,0BAAMvB,IAAKuB,EAAMrC,KAETqC,EAAM9C,SACN,wBAAIY,UAAU,yCACV,2BACID,SAAU,SAACR,GAAD,OACNiF,EAAY,2BAAItC,GAAL,IAAYvC,MAAOJ,EAAME,OAAOC,UAE/CA,MAAOwC,EAAMvC,QAEjB,uBAAGK,UAAW,kCACXI,QAAS,kBAAMoE,EAAY,2BAAItC,GAAL,IAAY9C,SAAS,QAClD,uBAAGY,UAAU,qDACVI,QAAS,kBAAMgE,EAAYlC,QAIjCA,EAAM9C,SACP8C,EAAMrC,MAAQsE,GACd,wBAAInE,UAAU,yCACTkC,EAAMvC,QAIVuC,EAAM9C,SACP8C,EAAMrC,MAAQsE,GACd,wBAAInE,UAAU,kCACV,kBAAC,IAAD,CAAMC,GAAE,kBAAajB,EAAOa,IAApB,oBAAmCiC,EAAnC,oBAAqDE,EAArD,mBAAsEE,EAAMrC,MAC/EqC,EAAMvC,OAEX,uBAAGK,UAAW,+CACXI,QAAS,kBAAMoE,EAAY,2BAAItC,GAAL,IAAY9C,SAAS,cAM1E,4BAAQgB,QAAS,kBAAMkE,EAAYtC,EAAQ,CAACrC,MAAO,gBAAnD,oBEqMOoD,gBAlBe,SAAC5D,GAAD,MAAY,CACtCyD,QAASzD,EAAMsF,cAAc7B,QAC7B5D,OAAQG,EAAMgE,cAAcnE,OAC5BkD,MAAO/C,EAAM+E,aAAa/B,QAC1BH,OAAQ7C,EAAMuE,cAAczB,SAC5ByC,QAASvF,EAAMsF,cAAcC,YAGA,SAACjC,GAAD,MAAe,CAC5CkC,aAAc,SAACvC,GAAD,OPxNU,SAACK,EAAUL,GAAX,OACxBM,EAA2BN,EAAOjE,IAC7BE,MAAK,SAAAyE,GAAM,OAAML,EAAS,CACnBZ,KA9Ba,gBA+BbO,cOoNcuC,CAAalC,EAAUL,IACjDwC,aAAc,SAAC1C,EAAOE,GAAR,OPhPU,SAACK,EAAUN,EAASC,GAApB,OACxBM,EAA2BP,EAASC,GAC/B/D,MAAK,SAAAwG,GAAY,OAAIpC,EAAS,CAC3BZ,KAViB,gBAWjBO,OAAQyC,OO4OiBD,CAAanC,EAAUP,EAAOE,IAC/DS,aAAc,SAACT,GAAD,OAAYS,EAAaJ,EAAUL,IACjD0C,cAAe,SAAAJ,GAAO,OPnNG,SAACjC,EAAUiC,GAAX,OACzBjC,EAAS,CACLZ,KApCsB,iBAqCtB6C,YOgNsBI,CAAcrC,EAAUiC,IAClDlC,oBAAqB,SAAAN,GAAK,OAAIM,EAAoBC,EAAUP,IAC5D6C,QAAS,SAAAnC,GAAO,OPvMG,SAACH,EAAUG,GAAX,OACnBA,EAAQlC,KAAI,SAAA0B,GAAM,OAAIS,EAAaJ,EAAUL,MOsMzB2C,CAAQtC,EAAUG,IACtCoC,cAAe,SAAC9C,EAAOK,EAAOH,GAAf,OPhNU,SAACK,EAAUH,EAAKC,EAAOH,GAAvB,OACzBM,EAA4BJ,EAAKC,EAAOH,GACnC/D,MAAK,SAAA4G,GAAW,OAAIxC,EAAS,CAC1BZ,KA1CkB,iBA2ClBO,SACA6C,mBO2MiCD,CAAcvC,EAAUP,EAAOK,EAAOH,OAGpEW,EArPI,SAAC,GAAD,IACKb,EADL,EACKA,MADL,IAEKU,eAFL,MAEa,GAFb,EAGK8B,EAHL,EAGKA,QACAC,EAJL,EAIKA,aACAC,EALL,EAKKA,aACAE,EANL,EAMKA,cACAE,EAPL,EAOKA,cACAxC,EARL,EAQKA,oBACAuC,EATL,EASKA,QACAlC,EAVL,EAUKA,aAVL,OAWf,6BACI,yBAAK7C,UAAU,OACX,yBAAKA,UAAU,eACX,uBAAGA,UAAU,kBAAkB7B,GAAG,OAC/BiC,QAAS,kBAAM2E,EAAQnC,KAD1B,QAIA,2BAAOsC,QAAQ,WAAf,WAGA,2BAAOrD,KAAK,WAAW1D,GAAG,UAAU6B,UAAU,eACvCD,SAAU,SAAAR,GAAK,OAAIuF,EAAcvF,EAAME,OAAO0F,cAK7D,6BAEA,yBAAKnF,UAAU,OACX,wBAAIA,UAAW,iBAEN0E,GACD9B,EAAQlC,KAAI,SAAA0B,GAAM,OACd,wBAAIzB,IAAKyB,EAAOjE,IACZ,yBAAK6B,UAAU,UACX,yBAAKA,UAAU,aACX,4BAEwB,WAAhBoC,EAAOP,MACP,gDAGgB,cAAhBO,EAAOP,MACP,kDAEJ,yBAAK7B,UAAU,eAEgB,IAAvBoC,EAAOgD,aACP,uBAAGpF,UAAU,oCACVI,QAAS,kBAAM4E,EACX9C,EACAE,EAAOgD,YAFiB,YAAC,eAGrBhD,GAHoB,IAGZgD,YAAahD,EAAOgD,YAAc,OACjD,uBAAGpF,UAAU,oBAIjBoC,EAAOgD,cAAgBxC,EAAQyC,OAAS,GACxC,uBAAGrF,UAAU,oCACVI,QAAS,WACL4E,EACI9C,EACAE,EAAOgD,YAFE,YAAC,eAGNhD,GAHK,IAGGgD,YAAahD,EAAOgD,YAAc,KAClD5C,EAAoBN,KAEvB,uBAAGlC,UAAU,sBAIrB,4BAAQA,UAAU,eACdD,SAAU,SAAAR,GAAK,OACXsD,EAAa,2BAAIT,GAAL,IAAaP,KAAMtC,EAAME,OAAOC,UAEhDA,MAAO0C,EAAOP,MACd,4BAAQnC,MAAO,UAAf,UACA,4BAAQA,MAAO,aAAf,aACA,4BAAQA,MAAO,QAAf,QACA,4BAAQA,MAAO,SAAf,UAEJ,uBAAGM,UAAU,mCACbI,QAAS,kBAAMuE,EAAavC,KAD5B,YAKR,8BAAUpC,UAAU,mBACbD,SAAU,SAAAR,GAAK,OACXsD,EAAa,2BAAIT,GAAL,IAAakD,KAAM/F,EAAME,OAAOC,UAEhDA,MAAO0C,EAAOkD,KACd1D,YAAa,gBAGA,WAAhBQ,EAAOP,MACP,4BAAQ7B,UAAU,eACVD,SAAU,SAAAR,GAAK,OACXsD,EAAa,2BAAIT,GAAL,IAAamD,KAAMhG,EAAME,OAAOC,UAEhDA,MAAO0C,EAAOmD,MAClB,4BAAQ7F,MAAO,GAAf,aACA,4BAAQA,MAAO,GAAf,aACA,4BAAQA,MAAO,GAAf,aACA,4BAAQA,MAAO,GAAf,aACA,4BAAQA,MAAO,GAAf,aACA,4BAAQA,MAAO,GAAf,cAKY,SAAhB0C,EAAOP,MACP,4BAAQ7B,UAAU,eACVD,SAAU,SAAAR,GAAK,OACXsD,EAAa,2BAAIT,GAAL,IAAaoD,MAAOjG,EAAME,OAAOC,UAEjDA,MAAO0C,EAAOoD,OAClB,4BAAQ9F,MAAO,aAAf,aACA,4BAAQA,MAAO,WAAf,YAKR,6BAEA,2BAAOM,UAAU,eACVD,SAAU,SAAAR,GAAK,OACXsD,EAAa,2BAAIT,GAAL,IAAaqD,KAAMlG,EAAME,OAAOC,UAEhDA,MAAO0C,EAAOqD,KACd7D,YAAY,gBAElBQ,EAAOgD,kBAQxBV,GACA9B,EAAQlC,KAAI,SAAA0B,GAAM,OACd,wBAAIzB,IAAKyB,EAAOjE,IACZ,yBAAK6B,UAAU,UAES,WAAhBoC,EAAOP,MACP,yBAAK7B,UAAU,aAES,IAAhBoC,EAAOmD,MACP,4BAAKnD,EAAOkD,MAGI,IAAhBlD,EAAOmD,MACP,4BAAKnD,EAAOkD,MAGI,IAAhBlD,EAAOmD,MACP,4BAAKnD,EAAOkD,MAGI,IAAhBlD,EAAOmD,MACP,4BAAKnD,EAAOkD,MAGI,IAAhBlD,EAAOmD,MACP,4BAAKnD,EAAOkD,MAGI,IAAhBlD,EAAOmD,MACP,4BAAKnD,EAAOkD,OAKJ,cAAhBlD,EAAOP,MACP,yBAAK7B,UAAU,aACX,2BAAIoC,EAAOkD,OAIC,SAAhBlD,EAAOP,MACU,cAAjBO,EAAOoD,OACP,4BAEQpD,EAAOkD,KAAKI,MAAM,MAAMhF,KAAI,SAAAiF,GAAG,OAC3B,wBAAIxH,GAAIwH,GACHA,OAMD,SAAhBvD,EAAOP,MACU,YAAjBO,EAAOoD,OACP,4BAEQpD,EAAOkD,KAAKI,MAAM,MAAMhF,KAAI,SAAAiF,GAAG,OAC3B,wBAAIxH,GAAIwH,GACHA,OAMD,UAAhBvD,EAAOP,MACP,yBAAK+D,IAAKxD,EAAOkD,KAAMO,IAAK,wBASxD,yBAAK7F,UAAU,OACX,uBAAGA,UAAU,kCACTI,QAAS,kBAAMwE,EAAa1C,EACxB,CACIL,KAAM,SACN0D,KAAM,EACNH,YAAaxC,EAAQyC,OACrBG,MAAO,sBCxNzBM,G,4MACF3G,MAAQ,CACJ6D,QAAS,CACL,oBACA,mBACA,mBACA,oBACA,qBACA,kBACA,oBAEJS,QAAS,CACL,QACA,QACA,QACA,QACA,OACA,WAEJQ,OAAQ,CACJ,UACA,UACA,UACA,Y,kEAKJ,IAAMxF,EAAWqB,KAAKZ,MAAMlB,MAAM+H,OAAOtH,SACnCsD,EAAWjC,KAAKZ,MAAMlB,MAAM+H,OAAOhE,SACnCE,EAAWnC,KAAKZ,MAAMlB,MAAM+H,OAAO9D,SACnCE,EAAUrC,KAAKZ,MAAMlB,MAAM+H,OAAO5D,QACxCrC,KAAKZ,MAAMhB,eAAeO,GAC1BqB,KAAKZ,MAAM8G,qBAAqBvH,GAC7BsD,IACCjC,KAAKZ,MAAM+G,aAAalE,GACxBjC,KAAKZ,MAAMgH,qBAAqBnE,GAC7BE,IACCnC,KAAKZ,MAAMiH,oBAAoBlE,GAC/BnC,KAAKZ,MAAMkH,aAAanE,GACrBE,IACCrC,KAAKZ,MAAMmH,YAAYlE,GACvBrC,KAAKZ,MAAMsD,oBAAoBL,Q,yCAM5BmE,EAAW/E,EAAWgF,GACrC,IAAMxE,EAAWjC,KAAKZ,MAAMlB,MAAM+H,OAAOhE,SAEtCA,IADsBuE,EAAUtI,MAAM+H,OAAOhE,WAE5CjC,KAAKZ,MAAM+G,aAAalE,GACxBjC,KAAKZ,MAAMgH,qBAAqBnE,GAChCjC,KAAKZ,MAAMiH,oBAAoBpE,IAEnC,IAAME,EAAWnC,KAAKZ,MAAMlB,MAAM+H,OAAO9D,SAEtCA,IADsBqE,EAAUtI,MAAM+H,OAAO9D,WAE5CnC,KAAKZ,MAAMkH,aAAanE,GACxBnC,KAAKZ,MAAMiH,oBAAoBlE,IAEnC,IAAME,EAAUrC,KAAKZ,MAAMlB,MAAM+H,OAAO5D,QAErCA,IADqBmE,EAAUtI,MAAM+H,OAAO5D,UAE3CrC,KAAKZ,MAAMmH,YAAYlE,GACvBrC,KAAKZ,MAAMsD,oBAAoBL,M,oCAIzBqE,GACV1G,KAAKZ,MAAM4F,cAAc0B,EAAGrB,W,+BAI5B,OACI,yBAAKnF,UAAW,mBACZ,yBAAKA,UAAU,OACX,yBAAKA,UAAU,SACX,4BACI,kBAAC,IAAD,CAAMA,UAAU,4CACVC,GAAI,mBACV,yBAAKD,UAAU,qBAAf,cAIR,yBAAKA,UAAU,SACX,kBAAC,EAAD,QAKR,yBAAKA,UAAU,OACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,kBAAC,EAAD,SAKZ,yBAAKA,UAAU,YACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,kBAAC,EAAD,OAGJ,6BAIA,kBAAC,GAAD,OAMJ,oC,GArHYM,IAAMC,WAiJ3BwC,gBAlBS,SAAC5D,GAAD,MAAY,CAChCH,OAAQG,EAAMgE,cAAcnE,WAEC,SAACyD,GAAD,MAAe,CAC5CuD,qBAAsB,SAAAvH,GAAQ,ONpIE,SAACgE,EAAUhE,GAAX,OAChC4E,EAAsC5E,GACjCJ,MAAK,SAAAoI,GAAa,OAAIhE,EAAS,CACxBZ,KAfuB,0BAgBvBmB,QAASyD,OMgIaT,CAAqBvD,EAAUhE,IACjEwH,aAAc,SAAClE,GAAD,ON7GU,SAACU,EAAUV,GAAX,OACxBU,EAAS,CACLZ,KAnCqB,gBAoCrBE,aM0GwBkE,CAAaxD,EAAUV,IACnDmE,qBAAsB,SAAAnE,GAAQ,OJtIE,SAACU,EAAUV,GAAX,OAChC8B,EAAsC9B,GACjC1D,MAAK,SAAAqI,GAAa,OAAIjE,EAAS,CACxBZ,KAfuB,0BAgBvB4B,QAASiD,OIkIaR,CAAqBzD,EAAUV,IACjEqE,aAAc,SAAAnE,GAAQ,OJ/GE,SAACQ,EAAUR,GAAX,OACxBQ,EAAS,CACLZ,KAnCqB,gBAoCrBI,aI4GsBmE,CAAa3D,EAAUR,IACjDkE,oBAAqB,SAAAlE,GAAQ,OFxIE,SAACQ,EAAUR,GAAX,OAC/BoC,EAAoCpC,GAC/B5D,MAAK,SAAAsI,GAAY,OAAIlE,EAAS,CACvBZ,KAfsB,yBAgBtBoC,OAAQ0C,OEoIaR,CAAoB1D,EAAUR,IAC/DoE,YAAa,SAAAlE,GAAO,OFjHG,SAACM,EAAUN,GAAX,OACvBM,EAAS,CACLZ,KAnCoB,eAoCpBM,YE8GoBkE,CAAY5D,EAAUN,IAC9CK,oBAAqB,SAAAL,GAAO,OAAIK,EAAoBC,EAAUN,IAC9DjE,eAAgB,SAACO,GAAD,OAAcP,EAAeO,GACxCJ,MAAK,SAAAiD,GAAY,OAAImB,EAAS,CAC3BZ,KAAM,oBACN7C,OAAQsC,WAILyB,CAEd+C,I,QCpJcc,G,uKATP,OACI,6BACI,kBAAC,IAAD,CAAM3G,GAAI,WAAV,iBACA,kBAAC,IAAD,CAAMA,GAAI,kBAAV,uB,GALGK,IAAMC,W,SCHnBsG,GAAe,CACjBpG,QAAS,GACTzB,OAAQ,IAeGmE,GAZO,WAAmC,IAAlChE,EAAiC,uDAAzB0H,GAAcC,EAAW,uCACpD,OAAOA,EAAOjF,MACV,IAAK,oBACD,OAAO,2BACA1C,GADP,IAEIH,OAAQ8H,EAAO9H,SAEvB,QACI,OAAOG,ICNb0H,GAAe,CACjB7D,QAAS,GACTjB,SAAU,MAsCCkB,GAnCO,WAAiC,IAAhC9D,EAA+B,uDAAzB0H,GAAcC,EAAW,uCAClD,OAAQA,EAAOjF,MACX,ITZ+B,0BSa3B,MAAO,CACHmB,QAAS8D,EAAO9D,QAChBjB,SAAU5C,EAAM4C,UAExB,ITlBqB,gBSmBjB,MAAO,CACHiB,QAAQ,GAAD,mBACA7D,EAAM6D,SADN,CAEH8D,EAAOhF,SAEXC,SAAU5C,EAAM4C,UAExB,ITvBqB,gBSwBjB,MAAO,CACHiB,QAAS7D,EAAM6D,QAAQtB,QAAO,SAAAI,GAAM,OAAIA,EAAOjC,MAAQiH,EAAOhF,OAAOjC,OACrEkC,SAAU5C,EAAM4C,UAExB,IT7BqB,gBS8BjB,MAAO,CACHiB,QAAS7D,EAAM6D,QAAQtC,KAAI,SAAAoB,GAAM,OAAIA,EAAOjC,MAAQiH,EAAOhF,OAAOjC,IAAMiH,EAAOhF,OAASA,KACxFC,SAAU5C,EAAM4C,UAExB,IThCqB,gBSiCjB,MAAO,CACHiB,QAAS7D,EAAM6D,QACfjB,SAAU+E,EAAO/E,UAEzB,QACI,OAAO5C,ICnCb0H,GAAe,CACjBpD,QAAS,IAsCEC,GAnCO,WAAiC,IAAhCvE,EAA+B,uDAAzB0H,GAAcC,EAAW,uCAClD,OAAQA,EAAOjF,MACX,IRZ+B,0BQa3B,MAAO,CACH4B,QAASqD,EAAOrD,QAChBxB,SAAU9C,EAAM8C,UAExB,IRlBqB,gBQmBjB,MAAO,CACHwB,QAAQ,GAAD,mBACAtE,EAAMsE,SADN,CAEHqD,EAAO9E,SAEXC,SAAU9C,EAAM8C,UAExB,IRvBqB,gBQwBjB,MAAO,CACHwB,QAAStE,EAAMsE,QAAQ/B,QAAO,SAAAM,GAAM,OAAIA,EAAOnC,MAAQiH,EAAO9E,OAAOnC,OACrEoC,SAAU9C,EAAM8C,UAExB,IR7BqB,gBQ8BjB,MAAO,CACHwB,QAAStE,EAAMsE,QAAQ/C,KAAI,SAAAsB,GAAM,OAAIA,EAAOnC,MAAQiH,EAAO9E,OAAOnC,IAAMiH,EAAO9E,OAASA,KACxFC,SAAU9C,EAAM8C,UAExB,IRhCqB,gBQiCjB,MAAO,CACHwB,QAAStE,EAAMsE,QACfxB,SAAU6E,EAAO7E,UAEzB,QACI,OAAO9C,ICnCb0H,GAAe,CACjB5C,OAAQ,IAsCGC,GAnCM,WAAiC,IAAhC/E,EAA+B,uDAAzB0H,GAAcC,EAAW,uCACjD,OAAQA,EAAOjF,MACX,IPZ8B,yBOa1B,MAAO,CACHoC,OAAQ6C,EAAO7C,OACf9B,QAAShD,EAAMgD,SAEvB,IPlBoB,eOmBhB,MAAO,CACH8B,OAAO,GAAD,mBACC9E,EAAM8E,QADP,CAEF6C,EAAO5E,QAEXC,QAAShD,EAAMgD,SAEvB,IPvBoB,eOwBhB,MAAO,CACH8B,OAAQ9E,EAAM8E,OAAOvC,QAAO,SAAAQ,GAAK,OAAIA,EAAMrC,MAAQiH,EAAO5E,MAAMrC,OAChEsC,QAAShD,EAAMgD,SAEvB,IP7BoB,eO8BhB,MAAO,CACH8B,OAAQ9E,EAAM8E,OAAOvD,KAAI,SAAAwB,GAAK,OAAIA,EAAMrC,MAAQiH,EAAO5E,MAAMrC,IAAMiH,EAAO5E,MAAQA,KAClFC,QAAShD,EAAMgD,SAEvB,IPhCoB,eOiChB,MAAO,CACH8B,OAAQ9E,EAAM8E,OACd9B,QAAS2E,EAAO3E,SAExB,QACI,OAAOhD,ICnCb0H,GAAe,CACjBjE,QAAS,GACT8B,SAAS,GA8CED,GA3CO,WAAiC,IAAhCtF,EAA+B,uDAAzB0H,GAAcC,EAAW,uCAClD,OAAQA,EAAOjF,MACX,Idb8B,yBcc1B,MAAO,CACHe,QAASkE,EAAOlE,QAAQmE,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAG5B,YAAc6B,EAAG7B,eAC7DV,QAASvF,EAAMuF,SAEvB,IdnBqB,gBcoBjB,MAAO,CACH9B,QAAQ,GAAD,mBACAzD,EAAMyD,SADN,CAEHkE,EAAO1E,SAEXsC,QAASvF,EAAMuF,SAEvB,IdxBqB,gBcyBjB,MAAO,CACH9B,QAASzD,EAAMyD,QAAQlB,QAAO,SAAAU,GAAM,OAAIA,EAAOjE,KAAO2I,EAAO1E,OAAOjE,MACpEuG,QAASvF,EAAMuF,SAEvB,Id9BqB,gBc+BjB,MAAO,CACH9B,QAASzD,EAAMyD,QAAQlC,KAAI,SAAA0B,GAAM,OAAIA,EAAOjE,KAAO2I,EAAO1E,OAAOjE,GAAK2I,EAAO1E,OAASA,KACtFsC,QAASvF,EAAMuF,SAEvB,IdjCsB,iBckClB,MAAO,CACH9B,QAASzD,EAAMyD,QACf8B,QAASoC,EAAOpC,SAExB,IdrCsB,iBcsClB,MAAO,CACH9B,QAASzD,EAAMyD,QAAQlC,KACnB,SAAA0B,GAAM,OAAIA,EAAOjE,KAAO2I,EAAO1E,OAAOjE,GAAK2I,EAAO1E,OAC9CA,EAAOjE,KAAO2I,EAAO7B,YAAY9G,GAAK2I,EAAO7B,YAAc7C,KAC9D2E,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAG5B,YAAc6B,EAAG7B,eAC1CV,QAASvF,EAAMuF,SAEvB,QACI,OAAOvF,ICnCb+H,GAAcC,aAAgB,CAChClE,iBACAE,iBACAO,iBACAQ,gBACAO,mBAGE2C,GAAQC,aAAYH,IAE1BI,IAASC,OACL,kBAAC,IAAD,CAAUH,MAAOA,IACb,kBAAC,IAAD,KACI,6BACI,kBAAC,KAAD,CACII,KAAM,IACNC,UAAWb,KACf,kBAAC,KAAD,CACIY,KAAM,iBACND,OAAQ,SAACrI,GAAD,OACJ,kBAAC,EAAD,iBAA4BA,EAA5B,CAAmC8B,OAAO,QAElD,kBAAC,KAAD,CACIwG,KAAM,gBACND,OAAQ,SAACrI,GAAD,OACJ,kBAAC,EAAD,iBAA4BA,EAA5B,CAAmC8B,OAAO,QAElD,kBAAC,KAAD,CACIwG,KAAM,CACF,oBACA,sCACA,wDACA,yEAEJE,OAAK,EAACD,UAAW3B,QAKnC6B,SAASC,eAAe,S3B2EpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB1J,MAAK,SAAA2J,GACJA,EAAaC,gBAEdzG,OAAM,SAAAC,GACLyG,QAAQzG,MAAMA,EAAM0G,c","file":"static/js/main.ff28c1fe.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const url = \"https://wbdv-generic-server.herokuapp.com/api/hjacobson/courses\"\r\n\r\nexport const createCourse = (course) =>\r\n  fetch(url, {\r\n    method: 'POST',\r\n    body: JSON.stringify(course),\r\n    headers: {\r\n      'content-type': 'application/json'\r\n    }\r\n  })\r\n    .then(response => response.json())\r\n\r\nexport const findAllCourses = () =>\r\n  fetch(url)\r\n    .then(response => response.json())\r\n\r\nexport const findCourseById = (id) =>\r\n  fetch(`${url}/${id}`)\r\n    .then(response => response.json())\r\n\r\nexport const updateCourse = (courseId, newCourse) =>\r\n  fetch(`${url}/${courseId}`, {\r\n    method: 'PUT',\r\n    body: JSON.stringify(newCourse),\r\n    headers: {\r\n      'content-type': 'application/json'\r\n    }\r\n  })\r\n    .then(response => response.json())\r\n\r\nexport const deleteCourse = (courseId) =>\r\n  fetch(`${url}/${courseId}`, {\r\n    method: 'DELETE'\r\n  })\r\n    .then(response => response.json())\r\n\r\nexport default {\r\n  createCourse, findAllCourses, findCourseById, updateCourse, deleteCourse\r\n}\r\n","import React from \"react\";\r\nimport {updateCourse} from \"../../services/CourseService\";\r\nimport {Link} from 'react-router-dom'\r\n\r\nclass CourseTableEntryComponent extends React.Component {\r\n  state = {\r\n    editing: false,\r\n    courseTitle: \"Some Course\",\r\n    course: this.props.course\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props)\r\n  }\r\n\r\n  updateTitle = (event) => {\r\n    const newTitle = event.target.value\r\n    const course = { ...this.state.course }\r\n    course.title = newTitle\r\n    this.setState({\r\n      course: course\r\n    })\r\n  }\r\n\r\n  updateCourse = () => {\r\n    this.setState({editing: false})\r\n    updateCourse(this.state.course._id, this.state.course)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <tr>\r\n        <td>\r\n          {\r\n            this.state.editing === true &&\r\n            <input\r\n              onChange={this.updateTitle}\r\n              value={this.state.course.title}/>\r\n          }\r\n          {\r\n            this.state.editing === false &&\r\n            <span>\r\n              <i className=\"fa fa-file col-xs-6 wbdv-row wbdv-icon\"/>\r\n              &nbsp;\r\n              <Link to={`/editor/${this.state.course._id}`}>{this.state.course.title}</Link>\r\n            </span>\r\n          }\r\n        </td>\r\n        <td className={\"wbdv-row wbdv-owner\"}>{this.props.course.owner}</td>\r\n        <td className={\"wbdv-row wbdv-modified-date\"}>{this.props.course.lastUpdated}</td>\r\n        <td className={\"wbdv-row\"}>\r\n          {\r\n            this.state.editing &&\r\n            <i\r\n                className={\"fa fa-check wbdv-button wbdv-ok\"}\r\n                onClick={this.updateCourse}/>\r\n          }\r\n          {\r\n            !this.state.editing &&\r\n            <i\r\n                className={\"fa fa-gear wbdv-button wbdv-edit\"}\r\n                onClick={() => this.setState({editing: true})}/>\r\n          }\r\n          &nbsp;\r\n          <i\r\n              className={\"wbdv-color-red fa fa-trash wbdv-row wbdv-button wbdv-delete\"}\r\n              onClick={() => this.props.deleteCourse(this.props.course)}/>\r\n        </td>\r\n      </tr>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CourseTableEntryComponent\r\n","import React from \"react\";\r\nimport CourseTableEntryComponent from \"./CourseTableEntryComponent\";\r\nimport {Link} from 'react-router-dom'\r\n\r\nclass CourseTableComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <table className=\"table\">\r\n                <thead>\r\n                <tr>\r\n                    <th className=\"wbdv-header wbdv-title\">Title</th>\r\n                    <th className=\"wbdv-header wbdv-owner\">Owner</th>\r\n                    <th className=\"wbdv-header wbdv-last-modified\">Last Modified</th>\r\n                    <th className=\"wbdv-header wbdv-title\">\r\n                        <Link className=\"fa fa-th-large wbdv-button wbdv-grid-layout\"\r\n                              to={\"/courses/grid\"}/>\r\n                    </th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {\r\n                    this.props.courses.map(course =>\r\n                        <CourseTableEntryComponent\r\n                            key={course._id}\r\n                            deleteCourse={this.props.deleteCourse}\r\n                            course={course}/>\r\n                    )\r\n                }\r\n                </tbody>\r\n            </table>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CourseTableComponent\r\n","import React from \"react\";\r\nimport {updateCourse} from \"../../services/CourseService\";\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass CourseGridEntryComponent extends React.Component {\r\n    state = {\r\n        editing: false,\r\n        courseTitle: \"Some Course\",\r\n        course: this.props.course\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    updateTitle = (event) => {\r\n        const newTitle = event.target.value\r\n        const course = { ...this.state.course }\r\n        course.title = newTitle\r\n        this.setState({\r\n            course: course\r\n        })\r\n    }\r\n\r\n    updateCourse = () => {\r\n        this.setState({editing: false})\r\n        updateCourse(this.state.course._id, this.state.course)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"col-xs-12 col-sm-6 col-md-4 col-lg-3 col-xl-2\"}>\r\n                    <div className=\"card container\">\r\n                        {\r\n                            this.state.editing === true &&\r\n                            <input\r\n                                onChange={this.updateTitle}\r\n                                value={this.state.course.title}/>\r\n                        }\r\n                        {\r\n                            this.state.editing === false &&\r\n                            <div className=\"row no-gutters\">\r\n                                <div className={\"col-2\"}>\r\n                                    <i className=\"fa fa-file text-center align-middle wbdv-icon\"/>\r\n                                </div>\r\n                                <Link className={\"text-truncate col-10 align-middle\"}\r\n                                      to={`/editor/${this.state.course._id}`}>{this.state.course.title}</Link>\r\n                            </div>\r\n                        }\r\n                        <div className={\"row wbdv-modified-date\"}>\r\n                            <div className={\"col-8\"}>\r\n                                {this.props.course.lastUpdated}\r\n                            </div>\r\n                            <div className={\"col-4\"}>\r\n                                {\r\n                                    this.state.editing &&\r\n                                    <i\r\n                                        className={\"fa fa-check wbdv-button wbdv-ok\"}\r\n                                        onClick={this.updateCourse}/>\r\n                                }\r\n                                {\r\n                                    !this.state.editing &&\r\n                                    <i\r\n                                        className={\"fa fa-gear wbdv-button wbdv-edit\"}\r\n                                        onClick={() => this.setState({editing: true})}/>\r\n                                }\r\n                                &nbsp;\r\n                                <i\r\n                                    className={\"wbdv-color-red fa fa-trash wbdv-row wbdv-button wbdv-delete\"}\r\n                                    onClick={() => this.props.deleteCourse(this.props.course)}/>\r\n                            </div>\r\n                        </div>\r\n                    <div/>\r\n                    </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CourseGridEntryComponent\r\n","import React from \"react\";\r\nimport CourseGridEntryComponent from \"./CourseGridEntryComponent\";\r\nimport {Link} from 'react-router-dom'\r\n\r\nclass CourseGridComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className={\"row\"}>\r\n                    <div className={\"col-6 wbdv-header\"}>\r\n                        Recent Documents\r\n                    </div>\r\n                    <div className={\"col-3 wbdv-header\"}>\r\n                        Owned by me\r\n                    </div>\r\n                    <div className={\"col-3 wbdv-header\"}>\r\n                        <Link className=\"fa fa-list wbdv-button wbdv-list-layout\"\r\n                              to={\"/courses/table\"}/>\r\n                    </div>\r\n                </div>\r\n                <div className={\"row\"}>\r\n                {\r\n                    this.props.courses.map(course =>\r\n                        <CourseGridEntryComponent\r\n                            key={course._id}\r\n                            deleteCourse={this.props.deleteCourse}\r\n                            course={course}\r\n                            changePage={this.props.changePage}/>\r\n                    )\r\n                }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CourseGridComponent\r\n","import React from \"react\";\r\nimport $ from 'jquery'\r\nimport CourseTableEntryComponent from \"../components/CourseManager/CourseTableEntryComponent\";\r\nimport courseService from \"../services/CourseService\";\r\nimport \"../css/styles.css\"\r\nimport \"../css/course-manager.style.client.css\"\r\nimport CourseTableComponent from \"../components/CourseManager/CourseTableComponent\";\r\nimport CourseGridComponent from \"../components/CourseManager/CourseGridComponent\";\r\n\r\nclass CourseManagerContainer extends React.Component {\r\n    state = {\r\n        courses: [],\r\n        table: this.props.table\r\n    }\r\n\r\n    componentDidMount() {\r\n        courseService.findAllCourses()\r\n            .then(courses => this.setState({\r\n                courses: courses\r\n            }))\r\n    }\r\n\r\n    createCourse = () => {\r\n        const $title = $(\"#newCourseTitle\")\r\n        const title = $title.val()\r\n        $title.val(\"\")\r\n        const newCourse = {\r\n            title: title,\r\n            owner: 'me',\r\n            lastUpdated: 'yesterday'\r\n        }\r\n\r\n        // UNSAFE:\r\n        // const newState = {\r\n        //   courses: [\r\n        //     ...this.state.courses, newCourse\r\n        //   ]\r\n        // }\r\n        //\r\n        // this.setState(newState)\r\n\r\n        // SAFE:\r\n\r\n        courseService.createCourse(newCourse)\r\n            .then(actualCourse => this.setState(prevState => {\r\n                    return {\r\n                        courses: [\r\n                            ...prevState.courses, actualCourse\r\n                        ]\r\n                    }\r\n                })\r\n            )\r\n            .catch(error => {})\r\n    }\r\n\r\n    deleteCourse = (course) => {\r\n        courseService.deleteCourse(course._id)\r\n            .then(() => this.setState(prevState => ({\r\n                courses: prevState.courses.filter(c => c._id !== course._id)\r\n            })))\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"container\">\r\n                <h3 className=\"wbdv-sticky-header\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-1\">\r\n                                <i className=\"fa fa-bars wbdv-field wbdv-hamburger\"/>\r\n                            </div>\r\n                            <div className=\"col-3\">\r\n                                <div className=\"wbdv-nudge-9px-down wbdv-label wbdv-course-manager\">\r\n                                    Course Manager\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-7\">\r\n                                <input id=\"newCourseTitle\"\r\n                                        placeholder=\"New Course Title\"\r\n                                       type=\"text\"\r\n                                       className=\"form-control wbdv-nudge-9px-down wbdv-field wbdv-new-course\"/>\r\n                            </div>\r\n                            <div className=\"col-1\">\r\n                                <i className=\"wbdv-color-red fa fa-2x fa-plus-circle wbdv-button wbdv-add-course\"\r\n                                    onClick={() => this.createCourse()}/>\r\n                            </div>\r\n\r\n\r\n                            <i className=\"wbdv-stuck-bottom-right wbdv-color-red fa fa-2x fa-plus-circle wbdv-button wbdv-add-course\"/>\r\n                        </div>\r\n                    </div>\r\n                </h3>\r\n\r\n                <div className=\"wbdv-padding-top-55\">\r\n                    {\r\n                        this.state.table &&\r\n                        <CourseTableComponent\r\n                            courses={this.state.courses}\r\n                            deleteCourse={this.deleteCourse}/>\r\n                    }\r\n                    {\r\n                        !this.state.table &&\r\n                        <CourseGridComponent\r\n                            courses={this.state.courses}\r\n                            deleteCourse={this.deleteCourse}/>\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CourseManagerContainer\r\n","import React from 'react';\r\n\r\nclass TopicComponent extends React.Component {\r\n    render() {\r\n        return(\r\n            <li className=\"nav-item\">\r\n                <a href=\"#\" className=\"nav-link wbdv-topic-pill\">{this.props.topic}</a>\r\n            </li>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TopicComponent","const url = \"https://wbdv-generic-server.herokuapp.com/api/hjacobson\"\r\n\r\nexport const createModule = (courseId, module) =>\r\n    fetch(`${url}/courses/${courseId}/modules`, {\r\n        method: 'POST',\r\n        body: JSON.stringify(module),\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n\r\nexport const findAllModulesForCourse = (courseId) =>\r\n    fetch(`${url}/courses/${courseId}/modules`)\r\n        .then(response => response.json())\r\n\r\nexport const updateModule = (moduleId, module) =>\r\n    fetch(`${url}/modules/${moduleId}`, {\r\n        method: 'PUT',\r\n        body: JSON.stringify(module),\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n\r\nexport const deleteModule = (moduleId) =>\r\n    fetch(`${url}/modules/${moduleId}`, {\r\n        method: 'DELETE'\r\n    })\r\n        .then(response => response.json())\r\n\r\nexport default {\r\n    createModule, findAllModulesForCourse, updateModule, deleteModule\r\n}\r\n","const url = \"https://wbdv-generic-server.herokuapp.com/api/hjacobson\"\r\n\r\nexport const createLesson = (moduleId, lesson) =>\r\n    fetch(`${url}/modules/${moduleId}/lessons`, {\r\n        method: 'POST',\r\n        body: JSON.stringify(lesson),\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n\r\nexport const findAllLessonsForModule = (moduleId) =>\r\n    fetch(`${url}/modules/${moduleId}/lessons`)\r\n        .then(response => response.json())\r\n\r\nexport const updateLesson = (lessonId, lesson) =>\r\n    fetch(`${url}/lessons/${lessonId}`, {\r\n        method: 'PUT',\r\n        body: JSON.stringify(lesson),\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n\r\nexport const deleteLesson = (lessonId) =>\r\n    fetch(`${url}/lessons/${lessonId}`, {\r\n        method: 'DELETE'\r\n    })\r\n        .then(response => response.json())\r\n\r\nexport default {\r\n    createLesson, findAllLessonsForModule, updateLesson, deleteLesson\r\n}\r\n","const url = \"https://wbdv-generic-server.herokuapp.com/api/hjacobson\"\r\n\r\nexport const createTopic = (lessonId, topic) =>\r\n    fetch(`${url}/lessons/${lessonId}/topics`, {\r\n        method: 'POST',\r\n        body: JSON.stringify(topic),\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n\r\nexport const findAllTopicsForLesson = (lessonId) =>\r\n    fetch(`${url}/lessons/${lessonId}/topics`)\r\n        .then(response => response.json())\r\n\r\nexport const updateTopic = (topicId, topic) =>\r\n    fetch(`${url}/topics/${topicId}`, {\r\n        method: 'PUT',\r\n        body: JSON.stringify(topic),\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n\r\nexport const deleteTopic = (topicId) =>\r\n    fetch(`${url}/topics/${topicId}`, {\r\n        method: 'DELETE'\r\n    })\r\n        .then(response => response.json())\r\n\r\nexport default {\r\n    createTopic, findAllTopicsForLesson, updateTopic, deleteTopic\r\n}\r\n","const url = \"http://localhost:8080/api\"\r\n\r\nexport const createWidget = (topicId, widget) =>\r\n    fetch(`${url}/widgets`, {\r\n        method: 'POST',\r\n        body: JSON.stringify({...widget, topicId}),\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n\r\nexport const findAllWidgetsForTopic = (topicId) =>\r\n    fetch(`${url}/topics/${topicId}/widgets`)\r\n        .then(response => response.json())\r\n\r\nexport const updateWidget = (widgetId, widget) =>\r\n    fetch(`${url}/widgets/${widgetId}`, {\r\n        method: 'PUT',\r\n        body: JSON.stringify(widget),\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n\r\nexport const deleteWidget = (widgetId) =>\r\n    fetch(`${url}/widgets/${widgetId}`, {\r\n        method: 'DELETE'\r\n    })\r\n        .then(response => response)\r\n\r\nexport const reorderWidget = (tid, order, widget) =>\r\n    fetch(`${url}/topics/${tid}/${order}`, {\r\n        method: 'PUT',\r\n        body: JSON.stringify(widget),\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n\r\nexport default {\r\n    createWidget, findAllWidgetsForTopic, updateWidget, deleteWidget, reorderWidget\r\n}\r\n","import widgetService from \"../services/WidgetService\"\r\nexport const CREATE_WIDGET = \"CREATE_WIDGET\"\r\nexport const FIND_WIDGETS_FOR_TOPIC = \"FIND_WIDGETS_FOR_TOPIC\"\r\nexport const UPDATE_WIDGET = \"UPDATE_WIDGET\"\r\nexport const DELETE_WIDGET = \"DELETE_WIDGET\"\r\nexport const TOGGLE_PREVIEW = \"TOGGLE_PREVIEW\"\r\nexport const REORDER_WIDGET = \"REORDER_WIDGET\"\r\n\r\nexport const createWidget = (dispatch, topicId, widget) =>\r\n    widgetService.createWidget(topicId, widget)\r\n        .then(actualWidget => dispatch({\r\n            type: CREATE_WIDGET,\r\n            widget: actualWidget\r\n        }))\r\n\r\nexport const findWidgetsForTopic = (dispatch, topicId) =>\r\n    widgetService.findAllWidgetsForTopic(topicId)\r\n        .then(actualWidgets => dispatch({\r\n                type: FIND_WIDGETS_FOR_TOPIC,\r\n                widgets: actualWidgets\r\n            })\r\n        )\r\n\r\nexport const updateWidget = (dispatch, widget) =>\r\n    widgetService.updateWidget(widget.id, widget)\r\n        .then(status => dispatch({\r\n                type: UPDATE_WIDGET,\r\n                widget\r\n            })\r\n        )\r\n\r\nexport const deleteWidget = (dispatch, widget) =>\r\n    widgetService.deleteWidget(widget.id)\r\n        .then(status =>   dispatch({\r\n                type: DELETE_WIDGET,\r\n                widget\r\n            })\r\n        )\r\n\r\nexport const togglePreview = (dispatch, preview) =>\r\n    dispatch({\r\n        type: TOGGLE_PREVIEW,\r\n        preview\r\n    })\r\n\r\nexport const reorderWidget = (dispatch, tid, order, widget) =>\r\n    widgetService.reorderWidget(tid, order, widget)\r\n        .then(otherWidget => dispatch({\r\n            type: REORDER_WIDGET,\r\n            widget,\r\n            otherWidget\r\n        }))\r\n\r\nexport const saveAll = (dispatch, widgets) =>\r\n    widgets.map(widget => updateWidget(dispatch, widget))","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    updateModule,\r\n    createModule,\r\n    deleteModule\r\n} from \"../../actions/moduleActions\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst ModuleList = (\r\n    { course,\r\n        modules=[],\r\n        selectedModule,\r\n        deleteModule,\r\n        createModule,\r\n        updateModule}) =>\r\n    <div>\r\n        <ul className=\"list-group wbdv-module-list\">\r\n            {\r\n                modules.map(module =>\r\n                    <span key={module._id}>\r\n                        {\r\n                            module.editing &&\r\n                            <li className=\"list-group-item active wbdv-module-item-title\">\r\n                                <input\r\n                                    onChange={(event) =>\r\n                                        updateModule({...module, title: event.target.value})\r\n                                    }\r\n                                    value={module.title}/>\r\n\r\n                                <i className={\"fa fa-check wbdv-button wbdv-ok\"}\r\n                                    onClick={() => updateModule({...module, editing: false})}/>\r\n                                <i className=\"fa fa-times float-right wbdv-module-item-delete-btn\"\r\n                                    onClick={() => deleteModule(module)}/>\r\n                            </li>\r\n                        }\r\n                        {\r\n                            !module.editing &&\r\n                            module._id === selectedModule &&\r\n                            <li className=\"list-group-item active wbdv-module-item-title\">\r\n                                {module.title}\r\n                            </li>\r\n                        }\r\n                        {\r\n                            !module.editing &&\r\n                            module._id !== selectedModule &&\r\n                            <li className=\"list-group-item wbdv-module-item-title\">\r\n                                <Link to={`/editor/${course._id}/modules/${module._id}`}>\r\n                                    {module.title}\r\n                                </Link>\r\n                                <i className={\"fa fa-gear float-right wbdv-button wbdv-edit\"}\r\n                                   onClick={() => updateModule({...module, editing: true})}/>\r\n                            </li>\r\n                        }\r\n                    </span>)\r\n            }\r\n        </ul>\r\n        <button onClick={() => createModule(course, {title: \"New Module\"})}>\r\n            Create Module\r\n        </button>\r\n    </div>\r\n\r\n// export default ModuleList\r\n\r\nconst stateToPropertyMapper = (state) => ({\r\n    modules: state.moduleReducer.modules,\r\n    selectedModule: state.moduleReducer.moduleId,\r\n    course: state.courseReducer.course\r\n})\r\n\r\nconst propertyToDispatchMapper = (dispatch) => ({\r\n    deleteModule: (module) => deleteModule(dispatch, module),\r\n    createModule: (course, module) => createModule(dispatch, course, module),\r\n    updateModule: (module) => updateModule(dispatch, module)\r\n})\r\n\r\nexport default connect\r\n(stateToPropertyMapper,\r\n    propertyToDispatchMapper)\r\n(ModuleList)\r\n","import moduleService from \"../services/ModuleService\"\r\nexport const CREATE_MODULE = \"CREATE_MODULE\"\r\nexport const FIND_MODULES_FOR_COURSE = \"FIND_MODULES_FOR_COURSE\"\r\nexport const UPDATE_MODULE = \"UPDATE_MODULE\"\r\nexport const DELETE_MODULE = \"DELETE_MODULE\"\r\nexport const SELECT_MODULE = \"SELECT_MODULE\"\r\n\r\nexport const createModule = (dispatch, course, module) =>\r\n    moduleService.createModule(course._id, module)\r\n        .then(actualModule => dispatch({\r\n            type: CREATE_MODULE,\r\n            module: actualModule\r\n        }))\r\n\r\nexport const findModulesForCourse = (dispatch, courseId) =>\r\n    moduleService.findAllModulesForCourse(courseId)\r\n        .then(actualModules => dispatch({\r\n                type: FIND_MODULES_FOR_COURSE,\r\n                modules: actualModules\r\n            })\r\n        )\r\n\r\nexport const updateModule = (dispatch, module) =>\r\n    moduleService.updateModule(module._id, module)\r\n        .then(status => dispatch({\r\n                type: UPDATE_MODULE,\r\n                module\r\n            })\r\n        )\r\n\r\nexport const deleteModule = (dispatch, module) =>\r\n    moduleService.deleteModule(module._id)\r\n        .then(status =>   dispatch({\r\n                type: DELETE_MODULE,\r\n                module\r\n            })\r\n        )\r\n\r\nexport const selectModule = (dispatch, moduleId) =>\r\n    dispatch({\r\n        type: SELECT_MODULE,\r\n        moduleId\r\n    })","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    updateLesson,\r\n    createLesson,\r\n    deleteLesson\r\n} from \"../../actions/lessonActions\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst LessonList = (\r\n    { course,\r\n        module,\r\n        lessons=[],\r\n        selectedLesson,\r\n        deleteLesson,\r\n        createLesson,\r\n        updateLesson}) =>\r\n    <div>\r\n        <ul className=\"nav nav-tabs wbdv-lesson-tabs\">\r\n            {\r\n                lessons.map(lesson =>\r\n                    <span key={lesson._id}>\r\n                        {\r\n                            lesson.editing &&\r\n                            <li className=\"nav-item active wbdv-lesson-item-title\">\r\n                                <input\r\n                                    onChange={(event) =>\r\n                                        updateLesson({...lesson, title: event.target.value})\r\n                                    }\r\n                                    value={lesson.title}/>\r\n\r\n                                <i className={\"fa fa-check wbdv-button wbdv-ok\"}\r\n                                   onClick={() => updateLesson({...lesson, editing: false})}/>\r\n                                <i className=\"fa fa-times float-right wbdv-lesson-item-delete-btn\"\r\n                                   onClick={() => deleteLesson(lesson)}/>\r\n                            </li>\r\n                        }\r\n                        {\r\n                            !lesson.editing &&\r\n                            lesson._id === selectedLesson &&\r\n                            <li className=\"nav-item active wbdv-lesson-item-title\">\r\n                                {lesson.title}\r\n                            </li>\r\n                        }\r\n                        {\r\n                            !lesson.editing &&\r\n                            lesson._id !== selectedLesson &&\r\n                            <li className=\"nav-item wbdv-lesson-item-title\">\r\n                                <Link to={`/editor/${course._id}/modules/${module}/lessons/${lesson._id}`}>\r\n                                    {lesson.title}\r\n                                </Link>\r\n                                <i className={\"fa fa-gear float-right wbdv-button wbdv-edit\"}\r\n                                   onClick={() => updateLesson({...lesson, editing: true})}/>\r\n                            </li>\r\n                        }\r\n                    </span>)\r\n            }\r\n        </ul>\r\n        <button onClick={() => createLesson(module, {title: \"New Lesson\"})}>\r\n            Create Lesson\r\n        </button>\r\n    </div>\r\n\r\n// export default LessonList\r\n\r\nconst stateToPropertyMapper = (state) => ({\r\n    lessons: state.lessonReducer.lessons,\r\n    selectedLesson: state.lessonReducer.lessonId,\r\n    course: state.courseReducer.course,\r\n    module: state.moduleReducer.moduleId\r\n})\r\n\r\nconst propertyToDispatchMapper = (dispatch) => ({\r\n    deleteLesson: (lesson) => deleteLesson(dispatch, lesson),\r\n    createLesson: (module, lesson) => createLesson(dispatch, module, lesson),\r\n    updateLesson: (lesson) => updateLesson(dispatch, lesson)\r\n})\r\n\r\nexport default connect\r\n(stateToPropertyMapper,\r\n    propertyToDispatchMapper)\r\n(LessonList)\r\n","import lessonService from \"../services/LessonService\"\r\nexport const CREATE_LESSON = \"CREATE_LESSON\"\r\nexport const FIND_LESSONS_FOR_MODULE = \"FIND_LESSONS_FOR_MODULE\"\r\nexport const UPDATE_LESSON = \"UPDATE_LESSON\"\r\nexport const DELETE_LESSON = \"DELETE_LESSON\"\r\nexport const SELECT_LESSON = \"SELECT_LESSON\"\r\n\r\nexport const createLesson = (dispatch, moduleId, lesson) =>\r\n    lessonService.createLesson(moduleId, lesson)\r\n        .then(actualLesson => dispatch({\r\n            type: CREATE_LESSON,\r\n            lesson: actualLesson\r\n        }))\r\n\r\nexport const findLessonsForModule = (dispatch, moduleId) =>\r\n    lessonService.findAllLessonsForModule(moduleId)\r\n        .then(actualLessons => dispatch({\r\n                type: FIND_LESSONS_FOR_MODULE,\r\n                lessons: actualLessons\r\n            })\r\n        )\r\n\r\nexport const updateLesson = (dispatch, lesson) =>\r\n    lessonService.updateLesson(lesson._id, lesson)\r\n        .then(status => dispatch({\r\n                type: UPDATE_LESSON,\r\n                lesson\r\n            })\r\n        )\r\n\r\nexport const deleteLesson = (dispatch, lesson) =>\r\n    lessonService.deleteLesson(lesson._id)\r\n        .then(status =>   dispatch({\r\n                type: DELETE_LESSON,\r\n                lesson\r\n            })\r\n        )\r\n\r\nexport const selectLesson = (dispatch, lessonId) =>\r\n    dispatch({\r\n        type: SELECT_LESSON,\r\n        lessonId\r\n    })","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    updateTopic,\r\n    createTopic,\r\n    deleteTopic\r\n} from \"../../actions/topicActions\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst TopicList = (\r\n    { course,\r\n        module,\r\n        lesson,\r\n        topics=[],\r\n        selectedTopic,\r\n        deleteTopic,\r\n        createTopic,\r\n        updateTopic}) =>\r\n    <div>\r\n        <ul className=\"nav nav-tabs wbdv-topic-tabs\">\r\n            {\r\n                topics.map(topic =>\r\n                    <span key={topic._id}>\r\n                        {\r\n                            topic.editing &&\r\n                            <li className=\"nav-item active wbdv-topic-item-title\">\r\n                                <input\r\n                                    onChange={(event) =>\r\n                                        updateTopic({...topic, title: event.target.value})\r\n                                    }\r\n                                    value={topic.title}/>\r\n\r\n                                <i className={\"fa fa-check wbdv-button wbdv-ok\"}\r\n                                   onClick={() => updateTopic({...topic, editing: false})}/>\r\n                                <i className=\"fa fa-times float-right wbdv-topic-item-delete-btn\"\r\n                                   onClick={() => deleteTopic(topic)}/>\r\n                            </li>\r\n                        }\r\n                        {\r\n                            !topic.editing &&\r\n                            topic._id === selectedTopic &&\r\n                            <li className=\"nav-item active wbdv-topic-item-title\">\r\n                                {topic.title}\r\n                            </li>\r\n                        }\r\n                        {\r\n                            !topic.editing &&\r\n                            topic._id !== selectedTopic &&\r\n                            <li className=\"nav-item wbdv-topic-item-title\">\r\n                                <Link to={`/editor/${course._id}/modules/${module}/lessons/${lesson}/topics/${topic._id}`}>\r\n                                    {topic.title}\r\n                                </Link>\r\n                                <i className={\"fa fa-gear float-right wbdv-button wbdv-edit\"}\r\n                                   onClick={() => updateTopic({...topic, editing: true})}/>\r\n                            </li>\r\n                        }\r\n                    </span>)\r\n            }\r\n        </ul>\r\n        <button onClick={() => createTopic(lesson, {title: \"New Topic\"})}>\r\n            Create Topic\r\n        </button>\r\n    </div>\r\n\r\n// export default TopicList\r\n\r\nconst stateToPropertyMapper = (state) => ({\r\n    topics: state.topicReducer.topics,\r\n    selectedTopic: state.topicReducer.topicId,\r\n    course: state.courseReducer.course,\r\n    module: state.moduleReducer.moduleId,\r\n    lesson: state.lessonReducer.lessonId\r\n})\r\n\r\nconst propertyToDispatchMapper = (dispatch) => ({\r\n    deleteTopic: (topic) => deleteTopic(dispatch, topic),\r\n    createTopic: (module, topic) => createTopic(dispatch, module, topic),\r\n    updateTopic: (topic) => updateTopic(dispatch, topic)\r\n})\r\n\r\nexport default connect\r\n(stateToPropertyMapper,\r\n    propertyToDispatchMapper)\r\n(TopicList)\r\n","import topicService from \"../services/TopicService\"\r\nexport const CREATE_TOPIC = \"CREATE_TOPIC\"\r\nexport const FIND_TOPICS_FOR_LESSON = \"FIND_TOPICS_FOR_LESSON\"\r\nexport const UPDATE_TOPIC = \"UPDATE_TOPIC\"\r\nexport const DELETE_TOPIC = \"DELETE_TOPIC\"\r\nexport const SELECT_TOPIC = \"SELECT_TOPIC\"\r\n\r\nexport const createTopic = (dispatch, lessonId, topic) =>\r\n    topicService.createTopic(lessonId, topic)\r\n        .then(actualTopic => dispatch({\r\n            type: CREATE_TOPIC,\r\n            topic: actualTopic\r\n        }))\r\n\r\nexport const findTopicsForLesson = (dispatch, lessonId) =>\r\n    topicService.findAllTopicsForLesson(lessonId)\r\n        .then(actualTopics => dispatch({\r\n                type: FIND_TOPICS_FOR_LESSON,\r\n                topics: actualTopics\r\n            })\r\n        )\r\n\r\nexport const updateTopic = (dispatch, topic) =>\r\n    topicService.updateTopic(topic._id, topic)\r\n        .then(status => dispatch({\r\n                type: UPDATE_TOPIC,\r\n                topic\r\n            })\r\n        )\r\n\r\nexport const deleteTopic = (dispatch, topic) =>\r\n    topicService.deleteTopic(topic._id)\r\n        .then(status =>   dispatch({\r\n                type: DELETE_TOPIC,\r\n                topic\r\n            })\r\n        )\r\n\r\nexport const selectTopic = (dispatch, topicId) =>\r\n    dispatch({\r\n        type: SELECT_TOPIC,\r\n        topicId\r\n    })","import React from \"react\";\r\nimport {\r\n    createWidget,\r\n    deleteWidget, findWidgetsForTopic,\r\n    reorderWidget,\r\n    saveAll,\r\n    togglePreview,\r\n    updateWidget\r\n} from \"../../actions/widgetActions\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst WidgetList = ({\r\n                        topic,\r\n                        widgets=[],\r\n                        preview,\r\n                        deleteWidget,\r\n                        createWidget,\r\n                        togglePreview,\r\n                        reorderWidget,\r\n                        findWidgetsForTopic,\r\n                        saveAll,\r\n                        updateWidget}) =>\r\n    <div>\r\n        <div className=\"row\">\r\n            <div className=\"float-right\">\r\n                <a className=\"btn btn-success\" id=\"save\"\r\n                   onClick={() => saveAll(widgets)}>\r\n                    Save\r\n                </a>\r\n                <label htmlFor=\"preview\">\r\n                    Preview\r\n                </label>\r\n                <input type=\"checkbox\" id=\"preview\" className=\"wbdv-preview\"\r\n                       onChange={event => togglePreview(event.target.checked)}/>\r\n\r\n            </div>\r\n        </div>\r\n\r\n        <br/>\r\n\r\n        <div className=\"row\">\r\n            <ul className={\"wbdv-widgets\"}>\r\n                {\r\n                    !preview &&\r\n                    widgets.map(widget =>\r\n                        <li key={widget.id}>\r\n                            <div className=\"border\">\r\n                                <div className=\"container\">\r\n                                    <h3>\r\n                                        {\r\n                                            widget.type === 'header' &&\r\n                                            <span>Heading Widget</span>\r\n                                        }\r\n                                        {\r\n                                            widget.type === 'paragraph' &&\r\n                                            <span>Paragraph Widget</span>\r\n                                        }\r\n                                        <div className=\"float-right\">\r\n                                            {\r\n                                                widget.widgetOrder !== 0 &&\r\n                                                <a className=\"btn btn-warning wbdv-nudge-3px-up\"\r\n                                                   onClick={() => reorderWidget(\r\n                                                       topic,\r\n                                                       widget.widgetOrder,\r\n                                                       {...widget, widgetOrder: widget.widgetOrder - 1})}>\r\n                                                    <i className=\"fa fa-arrow-up\"/>\r\n                                                </a>\r\n                                            }\r\n                                            {\r\n                                                widget.widgetOrder !== widgets.length - 1 &&\r\n                                                <a className=\"btn btn-warning wbdv-nudge-3px-up\"\r\n                                                   onClick={() => {\r\n                                                       reorderWidget(\r\n                                                           topic,\r\n                                                           widget.widgetOrder,\r\n                                                           {...widget, widgetOrder: widget.widgetOrder + 1})\r\n                                                       findWidgetsForTopic(topic)\r\n                                                   }}>\r\n                                                    <i className=\"fa fa-arrow-down\"/>\r\n                                                </a>\r\n                                            }\r\n\r\n                                            <select className=\"form-control\"\r\n                                                onChange={event =>\r\n                                                    updateWidget({...widget, type: event.target.value})\r\n                                                }\r\n                                                value={widget.type}>\r\n                                                <option value={\"header\"}>Header</option>\r\n                                                <option value={\"paragraph\"}>Paragraph</option>\r\n                                                <option value={\"list\"}>List</option>\r\n                                                <option value={\"image\"}>Image</option>\r\n                                            </select>\r\n                                            <a className=\"btn btn-danger wbdv-nudge-3px-up\"\r\n                                            onClick={() => deleteWidget(widget)}>Delete</a>\r\n                                        </div>\r\n                                    </h3>\r\n\r\n                                    <textarea className=\"wbdv-widget-text\"\r\n                                           onChange={event =>\r\n                                               updateWidget({...widget, text: event.target.value})\r\n                                           }\r\n                                           value={widget.text}\r\n                                           placeholder={\"Widget Text\"}/>\r\n\r\n                                    {\r\n                                        widget.type === \"header\" &&\r\n                                        <select className=\"form-control\"\r\n                                                onChange={event =>\r\n                                                    updateWidget({...widget, size: event.target.value})\r\n                                                }\r\n                                                value={widget.size}>\r\n                                            <option value={1}>Heading 1</option>\r\n                                            <option value={2}>Heading 2</option>\r\n                                            <option value={3}>Heading 3</option>\r\n                                            <option value={4}>Heading 4</option>\r\n                                            <option value={5}>Heading 5</option>\r\n                                            <option value={6}>Heading 6</option>\r\n                                        </select>\r\n                                    }\r\n\r\n                                    {\r\n                                        widget.type === \"list\" &&\r\n                                        <select className=\"form-control\"\r\n                                                onChange={event =>\r\n                                                    updateWidget({...widget, style: event.target.value})\r\n                                                }\r\n                                                value={widget.style}>\r\n                                            <option value={\"unordered\"}>Unordered</option>\r\n                                            <option value={\"ordered\"}>Ordered</option>\r\n                                        </select>\r\n                                    }\r\n\r\n\r\n                                    <br/>\r\n\r\n                                    <input className=\"form-control\"\r\n                                           onChange={event =>\r\n                                               updateWidget({...widget, name: event.target.value})\r\n                                           }\r\n                                           value={widget.name}\r\n                                           placeholder=\"Widget Name\"/>\r\n\r\n                                    {widget.widgetOrder}\r\n                                </div>\r\n\r\n                            </div>\r\n                        </li>\r\n                    )\r\n                }\r\n                {\r\n                    preview &&\r\n                    widgets.map(widget =>\r\n                        <li key={widget.id}>\r\n                            <div className=\"border\">\r\n                                {\r\n                                    widget.type === \"header\" &&\r\n                                    <div className=\"container\">\r\n                                        {\r\n                                            widget.size === 1 &&\r\n                                            <h1>{widget.text}</h1>\r\n                                        }\r\n                                        {\r\n                                            widget.size === 2 &&\r\n                                            <h2>{widget.text}</h2>\r\n                                        }\r\n                                        {\r\n                                            widget.size === 3 &&\r\n                                            <h3>{widget.text}</h3>\r\n                                        }\r\n                                        {\r\n                                            widget.size === 4 &&\r\n                                            <h4>{widget.text}</h4>\r\n                                        }\r\n                                        {\r\n                                            widget.size === 5 &&\r\n                                            <h5>{widget.text}</h5>\r\n                                        }\r\n                                        {\r\n                                            widget.size === 6 &&\r\n                                            <h6>{widget.text}</h6>\r\n                                        }\r\n                                    </div>\r\n                                }\r\n                                {\r\n                                    widget.type === \"paragraph\" &&\r\n                                    <div className=\"container\">\r\n                                        <p>{widget.text}</p>\r\n                                    </div>\r\n                                }\r\n                                {\r\n                                    widget.type === \"list\" &&\r\n                                    widget.style === \"unordered\" &&\r\n                                    <ul>\r\n                                        {\r\n                                            widget.text.split('\\n').map(str =>\r\n                                                <li id={str}>\r\n                                                    {str}\r\n                                                </li>)\r\n                                        }\r\n                                    </ul>\r\n                                }\r\n                                {\r\n                                    widget.type === \"list\" &&\r\n                                    widget.style === \"ordered\" &&\r\n                                    <ol>\r\n                                        {\r\n                                            widget.text.split('\\n').map(str =>\r\n                                                <li id={str}>\r\n                                                    {str}\r\n                                                </li>)\r\n                                        }\r\n                                    </ol>\r\n                                }\r\n                                {\r\n                                    widget.type === \"image\" &&\r\n                                    <img src={widget.text} alt={\"Widget Image\"}/>\r\n                                }\r\n                            </div>\r\n                        </li>\r\n                    )\r\n                }\r\n            </ul>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n            <i className=\"fa fa-plus col-xs-6 float-right\"\r\n                onClick={() => createWidget(topic,\r\n                    {\r\n                        type: \"header\",\r\n                        size: 1,\r\n                        widgetOrder: widgets.length,\r\n                        style: \"unordered\"\r\n                    }\r\n                    )}/>\r\n        </div>\r\n    </div>\r\n\r\n\r\nconst stateToPropertyMapper = (state) => ({\r\n    widgets: state.widgetReducer.widgets,\r\n    course: state.courseReducer.course,\r\n    topic: state.topicReducer.topicId,\r\n    lesson: state.lessonReducer.lessonId,\r\n    preview: state.widgetReducer.preview\r\n})\r\n\r\nconst propertyToDispatchMapper = (dispatch) => ({\r\n    deleteWidget: (widget) => deleteWidget(dispatch, widget),\r\n    createWidget: (topic, widget) => createWidget(dispatch, topic, widget),\r\n    updateWidget: (widget) => updateWidget(dispatch, widget),\r\n    togglePreview: preview => togglePreview(dispatch, preview),\r\n    findWidgetsForTopic: topic => findWidgetsForTopic(dispatch, topic),\r\n    saveAll: widgets => saveAll(dispatch, widgets),\r\n    reorderWidget: (topic, order, widget) => reorderWidget(dispatch, topic, order, widget)\r\n})\r\n\r\nexport default connect\r\n(stateToPropertyMapper,\r\n    propertyToDispatchMapper)\r\n(WidgetList)","import React from \"react\";\r\nimport \"../../css/styles.css\"\r\nimport TopicComponent from \"./TopicComponent\";\r\nimport {Link} from 'react-router-dom';\r\nimport {connect} from \"react-redux\";\r\nimport {findModulesForCourse, selectModule} from \"../../actions/moduleActions\";\r\nimport {findLessonsForModule, selectLesson} from \"../../actions/lessonActions\";\r\nimport {findTopicsForLesson, selectTopic} from \"../../actions/topicActions\";\r\nimport {findWidgetsForTopic, togglePreview} from \"../../actions/widgetActions\";\r\nimport {findCourseById} from \"../../services/CourseService\";\r\nimport ModuleList from \"./ModuleList\";\r\nimport LessonList from \"./LessonList\";\r\nimport TopicList from \"./TopicList\";\r\nimport WidgetList from \"./WidgetList\";\r\n\r\nclass CourseEditorComponent extends React.Component {\r\n    state = {\r\n        modules: [\r\n            \"Module 1 - jQuery\",\r\n            \"Module 2 - React\",\r\n            \"Module 3 - Redux\",\r\n            \"Module 4 - Native\",\r\n            \"Module 5 - Angular\",\r\n            \"Module 6 - Node\",\r\n            \"Module 7 - Mongo\",\r\n        ],\r\n        lessons: [\r\n            \"Build\",\r\n            \"Pages\",\r\n            \"Theme\",\r\n            \"Store\",\r\n            \"Apps\",\r\n            \"Setting\",\r\n        ],\r\n        topics: [\r\n            \"Topic 1\",\r\n            \"Topic 2\",\r\n            \"Topic 3\",\r\n            \"Topic 4\",\r\n        ]\r\n    }\r\n\r\n    componentDidMount() {\r\n        const courseId = this.props.match.params.courseId\r\n        const moduleId = this.props.match.params.moduleId\r\n        const lessonId = this.props.match.params.lessonId\r\n        const topicId = this.props.match.params.topicId\r\n        this.props.findCourseById(courseId)\r\n        this.props.findModulesForCourse(courseId)\r\n        if(moduleId) {\r\n            this.props.selectModule(moduleId)\r\n            this.props.findLessonsForModule(moduleId)\r\n            if(lessonId) {\r\n                this.props.findTopicsForLesson(lessonId)\r\n                this.props.selectLesson(lessonId)\r\n                if(topicId) {\r\n                    this.props.selectTopic(topicId)\r\n                    this.props.findWidgetsForTopic(topicId)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const moduleId = this.props.match.params.moduleId\r\n        const previousModuleId = prevProps.match.params.moduleId\r\n        if(moduleId !== previousModuleId) {\r\n            this.props.selectModule(moduleId)\r\n            this.props.findLessonsForModule(moduleId)\r\n            this.props.findTopicsForLesson(moduleId)\r\n        }\r\n        const lessonId = this.props.match.params.lessonId\r\n        const previousLessonId = prevProps.match.params.lessonId\r\n        if(lessonId !== previousLessonId) {\r\n            this.props.selectLesson(lessonId)\r\n            this.props.findTopicsForLesson(lessonId)\r\n        }\r\n        const topicId = this.props.match.params.topicId\r\n        const previousTopicId = prevProps.match.params.topicId\r\n        if(topicId !== previousTopicId) {\r\n            this.props.selectTopic(topicId)\r\n            this.props.findWidgetsForTopic(topicId)\r\n        }\r\n    }\r\n\r\n    togglePreview(cb) {\r\n        this.props.togglePreview(cb.checked)\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className={\"container-float\"}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-4\">\r\n                        <h1>\r\n                            <Link className=\"fa fa-times wbdv-source-editor wbdv-close\"\r\n                                  to={'/courses/table'}/>\r\n                            <div className=\"wbdv-course-title\">Knitting</div>\r\n                        </h1>\r\n                    </div>\r\n\r\n                    <div className=\"col-8\">\r\n                        <LessonList/>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-4\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <ModuleList/>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"col-sm-8\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <TopicList/>\r\n                            </div>\r\n\r\n                            <br/>\r\n\r\n\r\n\r\n                            <WidgetList/>\r\n\r\n\r\n                        </div>\r\n\r\n\r\n                        <br/>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst stateToProperty = (state) => ({\r\n    course: state.courseReducer.course\r\n})\r\nconst propertyToDispatchMapper = (dispatch) => ({\r\n    findModulesForCourse: courseId => findModulesForCourse(dispatch, courseId),\r\n    selectModule: (moduleId) => selectModule(dispatch, moduleId),\r\n    findLessonsForModule: moduleId => findLessonsForModule(dispatch, moduleId),\r\n    selectLesson: lessonId => selectLesson(dispatch, lessonId),\r\n    findTopicsForLesson: lessonId => findTopicsForLesson(dispatch, lessonId),\r\n    selectTopic: topicId => selectTopic(dispatch, topicId),\r\n    findWidgetsForTopic: topicId => findWidgetsForTopic(dispatch, topicId),\r\n    findCourseById: (courseId) => findCourseById(courseId)\r\n        .then(actualCourse => dispatch({\r\n            type: \"FIND_COURSE_BY_ID\",\r\n            course: actualCourse\r\n        }))\r\n})\r\n\r\nexport default connect\r\n(stateToProperty, propertyToDispatchMapper)\r\n(CourseEditorComponent)","import React from 'react';\r\nimport {BrowserRouter as Router, Link, Route} from 'react-router-dom';\r\n\r\nclass Home extends React.Component {\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Link to={'/editor'}>Course Editor</Link>\r\n                <Link to={'/courses/table'}>Course Manager</Link>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home","const initialState = {\r\n    courses: [],\r\n    course: {}\r\n}\r\n\r\nconst courseReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case \"FIND_COURSE_BY_ID\":\r\n            return {\r\n                ...state,\r\n                course: action.course\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default courseReducer","import {\r\n    FIND_MODULES_FOR_COURSE,\r\n    DELETE_MODULE,\r\n    UPDATE_MODULE,\r\n    CREATE_MODULE, SELECT_MODULE\r\n} from \"../actions/moduleActions\";\r\n\r\nconst initialState = {\r\n    modules: [],\r\n    moduleId: null\r\n}\r\n\r\nconst moduleReducer = (state=initialState, action) => {\r\n    switch (action.type) {\r\n        case FIND_MODULES_FOR_COURSE:\r\n            return {\r\n                modules: action.modules,\r\n                moduleId: state.moduleId\r\n            }\r\n        case CREATE_MODULE:\r\n            return {\r\n                modules: [\r\n                    ...state.modules,\r\n                    action.module\r\n                ],\r\n                moduleId: state.moduleId\r\n            }\r\n        case DELETE_MODULE:\r\n            return {\r\n                modules: state.modules.filter(module => module._id !== action.module._id),\r\n                moduleId: state.moduleId\r\n            }\r\n        case UPDATE_MODULE:\r\n            return {\r\n                modules: state.modules.map(module => module._id === action.module._id ? action.module : module),\r\n                moduleId: state.moduleId\r\n            }\r\n        case SELECT_MODULE:\r\n            return {\r\n                modules: state.modules,\r\n                moduleId: action.moduleId\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default moduleReducer\r\n","import {\r\n    FIND_LESSONS_FOR_MODULE,\r\n    DELETE_LESSON,\r\n    UPDATE_LESSON,\r\n    CREATE_LESSON,\r\n    SELECT_LESSON\r\n} from \"../actions/lessonActions\";\r\n\r\nconst initialState = {\r\n    lessons: []\r\n}\r\n\r\nconst lessonReducer = (state=initialState, action) => {\r\n    switch (action.type) {\r\n        case FIND_LESSONS_FOR_MODULE:\r\n            return {\r\n                lessons: action.lessons,\r\n                lessonId: state.lessonId\r\n            }\r\n        case CREATE_LESSON:\r\n            return {\r\n                lessons: [\r\n                    ...state.lessons,\r\n                    action.lesson\r\n                ],\r\n                lessonId: state.lessonId\r\n            }\r\n        case DELETE_LESSON:\r\n            return {\r\n                lessons: state.lessons.filter(lesson => lesson._id !== action.lesson._id),\r\n                lessonId: state.lessonId\r\n            }\r\n        case UPDATE_LESSON:\r\n            return {\r\n                lessons: state.lessons.map(lesson => lesson._id === action.lesson._id ? action.lesson : lesson),\r\n                lessonId: state.lessonId\r\n            }\r\n        case SELECT_LESSON:\r\n            return {\r\n                lessons: state.lessons,\r\n                lessonId: action.lessonId\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default lessonReducer\r\n","import {\r\n    FIND_TOPICS_FOR_LESSON,\r\n    DELETE_TOPIC,\r\n    UPDATE_TOPIC,\r\n    CREATE_TOPIC,\r\n    SELECT_TOPIC\r\n} from \"../actions/topicActions\";\r\n\r\nconst initialState = {\r\n    topics: []\r\n}\r\n\r\nconst topicReducer = (state=initialState, action) => {\r\n    switch (action.type) {\r\n        case FIND_TOPICS_FOR_LESSON:\r\n            return {\r\n                topics: action.topics,\r\n                topicId: state.topicId\r\n            }\r\n        case CREATE_TOPIC:\r\n            return {\r\n                topics: [\r\n                    ...state.topics,\r\n                    action.topic\r\n                ],\r\n                topicId: state.topicId\r\n            }\r\n        case DELETE_TOPIC:\r\n            return {\r\n                topics: state.topics.filter(topic => topic._id !== action.topic._id),\r\n                topicId: state.topicId\r\n            }\r\n        case UPDATE_TOPIC:\r\n            return {\r\n                topics: state.topics.map(topic => topic._id === action.topic._id ? action.topic : topic),\r\n                topicId: state.topicId\r\n            }\r\n        case SELECT_TOPIC:\r\n            return {\r\n                topics: state.topics,\r\n                topicId: action.topicId\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default topicReducer\r\n","import {\r\n    FIND_WIDGETS_FOR_TOPIC,\r\n    DELETE_WIDGET,\r\n    UPDATE_WIDGET,\r\n    CREATE_WIDGET,\r\n    SELECT_WIDGET, TOGGLE_PREVIEW, REORDER_WIDGET\r\n} from \"../actions/widgetActions\";\r\n\r\nconst initialState = {\r\n    widgets: [],\r\n    preview: false\r\n}\r\n\r\nconst widgetReducer = (state=initialState, action) => {\r\n    switch (action.type) {\r\n        case FIND_WIDGETS_FOR_TOPIC:\r\n            return {\r\n                widgets: action.widgets.sort((w1, w2) => w1.widgetOrder - w2.widgetOrder),\r\n                preview: state.preview\r\n            }\r\n        case CREATE_WIDGET:\r\n            return {\r\n                widgets: [\r\n                    ...state.widgets,\r\n                    action.widget\r\n                ],\r\n                preview: state.preview\r\n            }\r\n        case DELETE_WIDGET:\r\n            return {\r\n                widgets: state.widgets.filter(widget => widget.id !== action.widget.id),\r\n                preview: state.preview\r\n            }\r\n        case UPDATE_WIDGET:\r\n            return {\r\n                widgets: state.widgets.map(widget => widget.id === action.widget.id ? action.widget : widget),\r\n                preview: state.preview\r\n            }\r\n        case TOGGLE_PREVIEW:\r\n            return {\r\n                widgets: state.widgets,\r\n                preview: action.preview\r\n            }\r\n        case REORDER_WIDGET:\r\n            return {\r\n                widgets: state.widgets.map(\r\n                    widget => widget.id === action.widget.id ? action.widget :\r\n                        widget.id === action.otherWidget.id ? action.otherWidget : widget)\r\n                    .sort((w1, w2) => w1.widgetOrder - w2.widgetOrder),\r\n                preview: state.preview\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default widgetReducer\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\nimport \"font-awesome/css/font-awesome.css\"\r\nimport * as serviceWorker from './serviceWorker';\r\nimport CourseManagerContainer from \"./containers/CourseManagerContainer\";\r\nimport CourseEditorComponent from \"./components/CourseEditor/CourseEditorComponent\";\r\nimport {BrowserRouter as Router, Link, Route} from 'react-router-dom';\r\nimport Home from './Home'\r\nimport {combineReducers, createStore} from \"redux\";\r\nimport {Provider} from \"react-redux\";\r\nimport courseReducer from \"./reducers/courseReducer\";\r\nimport moduleReducer from \"./reducers/moduleReducer\";\r\nimport lessonReducer from \"./reducers/lessonReducer\";\r\nimport topicReducer from \"./reducers/topicReducer\";\r\nimport widgetReducer from \"./reducers/widgetReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    moduleReducer,\r\n    courseReducer,\r\n    lessonReducer,\r\n    topicReducer,\r\n    widgetReducer\r\n})\r\n\r\nconst store = createStore(rootReducer)\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <Router>\r\n            <div>\r\n                <Route\r\n                    path={'/'}\r\n                    component={Home}/>\r\n                <Route\r\n                    path={'/courses/table'}\r\n                    render={(props) => (\r\n                        <CourseManagerContainer {...props} table={true}/>\r\n                    )}/>\r\n                <Route\r\n                    path={'/courses/grid'}\r\n                    render={(props) => (\r\n                        <CourseManagerContainer {...props} table={false}/>\r\n                    )}/>\r\n                <Route\r\n                    path={[\r\n                        '/editor/:courseId',\r\n                        '/editor/:courseId/modules/:moduleId',\r\n                        '/editor/:courseId/modules/:moduleId/lessons/:lessonId',\r\n                        '/editor/:courseId/modules/:moduleId/lessons/:lessonId/topics/:topicId'\r\n                    ]}\r\n                    exact component={CourseEditorComponent}/>\r\n            </div>\r\n        </Router>\r\n    </Provider>\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}